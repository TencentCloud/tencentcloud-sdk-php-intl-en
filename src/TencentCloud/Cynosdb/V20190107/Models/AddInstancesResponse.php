<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cynosdb\V20190107\Models;
use TencentCloud\Common\AbstractModel;

/**
 * AddInstances response structure.
 *
 * @method string getTranId() Obtain Freeze transaction. one frozen transaction is activated at a time.
 * @method void setTranId(string $TranId) Set Freeze transaction. one frozen transaction is activated at a time.
 * @method array getDealNames() Obtain Specifies the post-paid order number.
 * @method void setDealNames(array $DealNames) Set Specifies the post-paid order number.
 * @method array getResourceIds() Obtain Delivery resource id list.
 * @method void setResourceIds(array $ResourceIds) Set Delivery resource id list.
 * @method array getBigDealIds() Obtain Large order number.
 * @method void setBigDealIds(array $BigDealIds) Set Large order number.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class AddInstancesResponse extends AbstractModel
{
    /**
     * @var string Freeze transaction. one frozen transaction is activated at a time.
     */
    public $TranId;

    /**
     * @var array Specifies the post-paid order number.
     */
    public $DealNames;

    /**
     * @var array Delivery resource id list.
     */
    public $ResourceIds;

    /**
     * @var array Large order number.
     */
    public $BigDealIds;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $TranId Freeze transaction. one frozen transaction is activated at a time.
     * @param array $DealNames Specifies the post-paid order number.
     * @param array $ResourceIds Delivery resource id list.
     * @param array $BigDealIds Large order number.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TranId",$param) and $param["TranId"] !== null) {
            $this->TranId = $param["TranId"];
        }

        if (array_key_exists("DealNames",$param) and $param["DealNames"] !== null) {
            $this->DealNames = $param["DealNames"];
        }

        if (array_key_exists("ResourceIds",$param) and $param["ResourceIds"] !== null) {
            $this->ResourceIds = $param["ResourceIds"];
        }

        if (array_key_exists("BigDealIds",$param) and $param["BigDealIds"] !== null) {
            $this->BigDealIds = $param["BigDealIds"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
