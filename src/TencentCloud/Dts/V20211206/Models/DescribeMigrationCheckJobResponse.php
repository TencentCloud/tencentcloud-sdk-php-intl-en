<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Dts\V20211206\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeMigrationCheckJob response structure.
 *
 * @method string getStatus() Obtain Check task execution status. Valid values: `notStarted`, `running`, `failed`, `success`.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setStatus(string $Status) Set Check task execution status. Valid values: `notStarted`, `running`, `failed`, `success`.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getBriefMsg() Obtain Check task result message
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setBriefMsg(string $BriefMsg) Set Check task result message
Note: This field may return null, indicating that no valid values can be obtained.
 * @method array getStepInfo() Obtain Check step
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setStepInfo(array $StepInfo) Set Check step
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getCheckFlag() Obtain Check result. Valid values: `checkPass`, `checkNotPass`.
 * @method void setCheckFlag(string $CheckFlag) Set Check result. Valid values: `checkPass`, `checkNotPass`.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeMigrationCheckJobResponse extends AbstractModel
{
    /**
     * @var string Check task execution status. Valid values: `notStarted`, `running`, `failed`, `success`.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Status;

    /**
     * @var string Check task result message
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $BriefMsg;

    /**
     * @var array Check step
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $StepInfo;

    /**
     * @var string Check result. Valid values: `checkPass`, `checkNotPass`.
     */
    public $CheckFlag;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $Status Check task execution status. Valid values: `notStarted`, `running`, `failed`, `success`.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $BriefMsg Check task result message
Note: This field may return null, indicating that no valid values can be obtained.
     * @param array $StepInfo Check step
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $CheckFlag Check result. Valid values: `checkPass`, `checkNotPass`.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Status",$param) and $param["Status"] !== null) {
            $this->Status = $param["Status"];
        }

        if (array_key_exists("BriefMsg",$param) and $param["BriefMsg"] !== null) {
            $this->BriefMsg = $param["BriefMsg"];
        }

        if (array_key_exists("StepInfo",$param) and $param["StepInfo"] !== null) {
            $this->StepInfo = [];
            foreach ($param["StepInfo"] as $key => $value){
                $obj = new CheckStep();
                $obj->deserialize($value);
                array_push($this->StepInfo, $obj);
            }
        }

        if (array_key_exists("CheckFlag",$param) and $param["CheckFlag"] !== null) {
            $this->CheckFlag = $param["CheckFlag"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
