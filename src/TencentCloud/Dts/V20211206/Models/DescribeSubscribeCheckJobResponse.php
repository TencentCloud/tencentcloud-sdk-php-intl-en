<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Dts\V20211206\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeSubscribeCheckJob response structure.
 *
 * @method string getSubscribeId() Obtain Subscription instance ID
 * @method void setSubscribeId(string $SubscribeId) Set Subscription instance ID
 * @method string getMessage() Obtain Failure or error prompts, success signals 'success'.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setMessage(string $Message) Set Failure or error prompts, success signals 'success'.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getStatus() Obtain Job running status. Valid values: running, failed, success.
 * @method void setStatus(string $Status) Set Job running status. Valid values: running, failed, success.
 * @method integer getProgress() Obtain Current overall progress. Value range: 0-100.
 * @method void setProgress(integer $Progress) Set Current overall progress. Value range: 0-100.
 * @method integer getStepAll() Obtain Total check steps
 * @method void setStepAll(integer $StepAll) Set Total check steps
 * @method integer getStepNow() Obtain Current step in execution
 * @method void setStepNow(integer $StepNow) Set Current step in execution
 * @method array getSteps() Obtain Running status of each stepNote: This field may return null, indicating that no valid values can be obtained.
 * @method void setSteps(array $Steps) Set Running status of each stepNote: This field may return null, indicating that no valid values can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeSubscribeCheckJobResponse extends AbstractModel
{
    /**
     * @var string Subscription instance ID
     */
    public $SubscribeId;

    /**
     * @var string Failure or error prompts, success signals 'success'.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Message;

    /**
     * @var string Job running status. Valid values: running, failed, success.
     */
    public $Status;

    /**
     * @var integer Current overall progress. Value range: 0-100.
     */
    public $Progress;

    /**
     * @var integer Total check steps
     */
    public $StepAll;

    /**
     * @var integer Current step in execution
     */
    public $StepNow;

    /**
     * @var array Running status of each stepNote: This field may return null, indicating that no valid values can be obtained.
     */
    public $Steps;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $SubscribeId Subscription instance ID
     * @param string $Message Failure or error prompts, success signals 'success'.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $Status Job running status. Valid values: running, failed, success.
     * @param integer $Progress Current overall progress. Value range: 0-100.
     * @param integer $StepAll Total check steps
     * @param integer $StepNow Current step in execution
     * @param array $Steps Running status of each stepNote: This field may return null, indicating that no valid values can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("SubscribeId",$param) and $param["SubscribeId"] !== null) {
            $this->SubscribeId = $param["SubscribeId"];
        }

        if (array_key_exists("Message",$param) and $param["Message"] !== null) {
            $this->Message = $param["Message"];
        }

        if (array_key_exists("Status",$param) and $param["Status"] !== null) {
            $this->Status = $param["Status"];
        }

        if (array_key_exists("Progress",$param) and $param["Progress"] !== null) {
            $this->Progress = $param["Progress"];
        }

        if (array_key_exists("StepAll",$param) and $param["StepAll"] !== null) {
            $this->StepAll = $param["StepAll"];
        }

        if (array_key_exists("StepNow",$param) and $param["StepNow"] !== null) {
            $this->StepNow = $param["StepNow"];
        }

        if (array_key_exists("Steps",$param) and $param["Steps"] !== null) {
            $this->Steps = [];
            foreach ($param["Steps"] as $key => $value){
                $obj = new SubscribeCheckStepInfo();
                $obj->deserialize($value);
                array_push($this->Steps, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
