<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeYarnScheduleHistory response structure.
 *
 * @method array getTasks() Obtain Task details.

Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setTasks(array $Tasks) Set Task details.

Note: This field may return null, indicating that no valid values can be obtained.
 * @method integer getTotal() Obtain Total quantity of task details.
 * @method void setTotal(integer $Total) Set Total quantity of task details.
 * @method array getSchedulerNameList() Obtain Scheduling type filter list

Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setSchedulerNameList(array $SchedulerNameList) Set Scheduling type filter list

Note: This field may return null, indicating that no valid values can be obtained.
 * @method array getStateList() Obtain Status filter list

Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setStateList(array $StateList) Set Status filter list

Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeYarnScheduleHistoryResponse extends AbstractModel
{
    /**
     * @var array Task details.

Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Tasks;

    /**
     * @var integer Total quantity of task details.
     */
    public $Total;

    /**
     * @var array Scheduling type filter list

Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $SchedulerNameList;

    /**
     * @var array Status filter list

Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $StateList;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $Tasks Task details.

Note: This field may return null, indicating that no valid values can be obtained.
     * @param integer $Total Total quantity of task details.
     * @param array $SchedulerNameList Scheduling type filter list

Note: This field may return null, indicating that no valid values can be obtained.
     * @param array $StateList Status filter list

Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Tasks",$param) and $param["Tasks"] !== null) {
            $this->Tasks = [];
            foreach ($param["Tasks"] as $key => $value){
                $obj = new SchedulerTaskInfo();
                $obj->deserialize($value);
                array_push($this->Tasks, $obj);
            }
        }

        if (array_key_exists("Total",$param) and $param["Total"] !== null) {
            $this->Total = $param["Total"];
        }

        if (array_key_exists("SchedulerNameList",$param) and $param["SchedulerNameList"] !== null) {
            $this->SchedulerNameList = $param["SchedulerNameList"];
        }

        if (array_key_exists("StateList",$param) and $param["StateList"] !== null) {
            $this->StateList = $param["StateList"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
