<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * ModifyResourceScheduleConfig response structure.
 *
 * @method boolean getIsDraft() Obtain `true`: Draft, indicating the resource pool is not refreshed.
 * @method void setIsDraft(boolean $IsDraft) Set `true`: Draft, indicating the resource pool is not refreshed.
 * @method string getErrorMsg() Obtain Verification error information. If it is not empty, it means that verification fails and configuration is not successful.
 * @method void setErrorMsg(string $ErrorMsg) Set Verification error information. If it is not empty, it means that verification fails and configuration is not successful.
 * @method string getData() Obtain Returned data.
 * @method void setData(string $Data) Set Returned data.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class ModifyResourceScheduleConfigResponse extends AbstractModel
{
    /**
     * @var boolean `true`: Draft, indicating the resource pool is not refreshed.
     */
    public $IsDraft;

    /**
     * @var string Verification error information. If it is not empty, it means that verification fails and configuration is not successful.
     */
    public $ErrorMsg;

    /**
     * @var string Returned data.
     */
    public $Data;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param boolean $IsDraft `true`: Draft, indicating the resource pool is not refreshed.
     * @param string $ErrorMsg Verification error information. If it is not empty, it means that verification fails and configuration is not successful.
     * @param string $Data Returned data.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("IsDraft",$param) and $param["IsDraft"] !== null) {
            $this->IsDraft = $param["IsDraft"];
        }

        if (array_key_exists("ErrorMsg",$param) and $param["ErrorMsg"] !== null) {
            $this->ErrorMsg = $param["ErrorMsg"];
        }

        if (array_key_exists("Data",$param) and $param["Data"] !== null) {
            $this->Data = $param["Data"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
