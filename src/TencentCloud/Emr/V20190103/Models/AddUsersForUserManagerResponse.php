<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * AddUsersForUserManager response structure.
 *
 * @method array getSuccessUserList() Obtain The user list that is successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method void setSuccessUserList(array $SuccessUserList) Set The user list that is successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method array getFailedUserList() Obtain The user list that is not successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method void setFailedUserList(array $FailedUserList) Set The user list that is not successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method integer getFlowId() Obtain Flow ID. If the flow ID is larger than 0, it means that the flow is launched; if the flow ID is equal to 0, it means that no flow is launched.
 * @method void setFlowId(integer $FlowId) Set Flow ID. If the flow ID is larger than 0, it means that the flow is launched; if the flow ID is equal to 0, it means that no flow is launched.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class AddUsersForUserManagerResponse extends AbstractModel
{
    /**
     * @var array The user list that is successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
     */
    public $SuccessUserList;

    /**
     * @var array The user list that is not successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
     */
    public $FailedUserList;

    /**
     * @var integer Flow ID. If the flow ID is larger than 0, it means that the flow is launched; if the flow ID is equal to 0, it means that no flow is launched.
     */
    public $FlowId;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $SuccessUserList The user list that is successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
     * @param array $FailedUserList The user list that is not successfully added
Note: This field may return `null`, indicating that no valid value can be obtained.
     * @param integer $FlowId Flow ID. If the flow ID is larger than 0, it means that the flow is launched; if the flow ID is equal to 0, it means that no flow is launched.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("SuccessUserList",$param) and $param["SuccessUserList"] !== null) {
            $this->SuccessUserList = $param["SuccessUserList"];
        }

        if (array_key_exists("FailedUserList",$param) and $param["FailedUserList"] !== null) {
            $this->FailedUserList = $param["FailedUserList"];
        }

        if (array_key_exists("FlowId",$param) and $param["FlowId"] !== null) {
            $this->FlowId = $param["FlowId"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
