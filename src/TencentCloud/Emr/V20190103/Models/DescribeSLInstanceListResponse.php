<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeSLInstanceList response structure.
 *
 * @method integer getTotalCnt() Obtain Total number of qualified instances	.
 * @method void setTotalCnt(integer $TotalCnt) Set Total number of qualified instances	.
 * @method array getInstancesList() Obtain Instance information list. If pagination is applied, only the current page's instance information list is displayed.
 * @method void setInstancesList(array $InstancesList) Set Instance information list. If pagination is applied, only the current page's instance information list is displayed.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeSLInstanceListResponse extends AbstractModel
{
    /**
     * @var integer Total number of qualified instances	.
     */
    public $TotalCnt;

    /**
     * @var array Instance information list. If pagination is applied, only the current page's instance information list is displayed.
     */
    public $InstancesList;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $TotalCnt Total number of qualified instances	.
     * @param array $InstancesList Instance information list. If pagination is applied, only the current page's instance information list is displayed.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TotalCnt",$param) and $param["TotalCnt"] !== null) {
            $this->TotalCnt = $param["TotalCnt"];
        }

        if (array_key_exists("InstancesList",$param) and $param["InstancesList"] !== null) {
            $this->InstancesList = [];
            foreach ($param["InstancesList"] as $key => $value){
                $obj = new SLInstanceInfo();
                $obj->deserialize($value);
                array_push($this->InstancesList, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
