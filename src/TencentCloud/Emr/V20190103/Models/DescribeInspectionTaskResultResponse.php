<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeInspectionTaskResult response structure.
 *
 * @method string getInspectionResultInfo() Obtain Inspection task record, encoded in Base64 format.
 * @method void setInspectionResultInfo(string $InspectionResultInfo) Set Inspection task record, encoded in Base64 format.
 * @method integer getTotal() Obtain The total number of records.
 * @method void setTotal(integer $Total) Set The total number of records.
 * @method string getTypeInfo() Obtain Category information encoded in Base64 format, which includes {"FixedTime": "Fixed time", "RealTime": "Real time"}.
 * @method void setTypeInfo(string $TypeInfo) Set Category information encoded in Base64 format, which includes {"FixedTime": "Fixed time", "RealTime": "Real time"}.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeInspectionTaskResultResponse extends AbstractModel
{
    /**
     * @var string Inspection task record, encoded in Base64 format.
     */
    public $InspectionResultInfo;

    /**
     * @var integer The total number of records.
     */
    public $Total;

    /**
     * @var string Category information encoded in Base64 format, which includes {"FixedTime": "Fixed time", "RealTime": "Real time"}.
     */
    public $TypeInfo;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $InspectionResultInfo Inspection task record, encoded in Base64 format.
     * @param integer $Total The total number of records.
     * @param string $TypeInfo Category information encoded in Base64 format, which includes {"FixedTime": "Fixed time", "RealTime": "Real time"}.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("InspectionResultInfo",$param) and $param["InspectionResultInfo"] !== null) {
            $this->InspectionResultInfo = $param["InspectionResultInfo"];
        }

        if (array_key_exists("Total",$param) and $param["Total"] !== null) {
            $this->Total = $param["Total"];
        }

        if (array_key_exists("TypeInfo",$param) and $param["TypeInfo"] !== null) {
            $this->TypeInfo = $param["TypeInfo"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
