<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Emr\V20190103\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeNodeDataDisks response structure.
 *
 * @method integer getTotalCount() Obtain Total number.
 * @method void setTotalCount(integer $TotalCount) Set Total number.
 * @method array getCBSList() Obtain Cloud disk list.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setCBSList(array $CBSList) Set Cloud disk list.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method integer getMaxSize() Obtain Maximum cloud disk capacity.
 * @method void setMaxSize(integer $MaxSize) Set Maximum cloud disk capacity.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeNodeDataDisksResponse extends AbstractModel
{
    /**
     * @var integer Total number.
     */
    public $TotalCount;

    /**
     * @var array Cloud disk list.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $CBSList;

    /**
     * @var integer Maximum cloud disk capacity.
     */
    public $MaxSize;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $TotalCount Total number.
     * @param array $CBSList Cloud disk list.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param integer $MaxSize Maximum cloud disk capacity.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TotalCount",$param) and $param["TotalCount"] !== null) {
            $this->TotalCount = $param["TotalCount"];
        }

        if (array_key_exists("CBSList",$param) and $param["CBSList"] !== null) {
            $this->CBSList = [];
            foreach ($param["CBSList"] as $key => $value){
                $obj = new CBSInstance();
                $obj->deserialize($value);
                array_push($this->CBSList, $obj);
            }
        }

        if (array_key_exists("MaxSize",$param) and $param["MaxSize"] !== null) {
            $this->MaxSize = $param["MaxSize"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
