<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Gaap\V20180529\Models;
use TencentCloud\Common\AbstractModel;

/**
 * ModifyProxiesAttribute request structure.
 *
 * @method array getInstanceIds() Obtain ID of one or multiple connections to be operated; It's an old parameter, please switch to ProxyIds.
 * @method void setInstanceIds(array $InstanceIds) Set ID of one or multiple connections to be operated; It's an old parameter, please switch to ProxyIds.
 * @method string getProxyName() Obtain Connection name. Up to 30 characters.
 * @method void setProxyName(string $ProxyName) Set Connection name. Up to 30 characters.
 * @method string getClientToken() Obtain A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method void setClientToken(string $ClientToken) Set A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
 * @method array getProxyIds() Obtain ID of one or multiple connections to be operated; It's a new parameter.
 * @method void setProxyIds(array $ProxyIds) Set ID of one or multiple connections to be operated; It's a new parameter.
 */
class ModifyProxiesAttributeRequest extends AbstractModel
{
    /**
     * @var array ID of one or multiple connections to be operated; It's an old parameter, please switch to ProxyIds.
     */
    public $InstanceIds;

    /**
     * @var string Connection name. Up to 30 characters.
     */
    public $ProxyName;

    /**
     * @var string A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     */
    public $ClientToken;

    /**
     * @var array ID of one or multiple connections to be operated; It's a new parameter.
     */
    public $ProxyIds;

    /**
     * @param array $InstanceIds ID of one or multiple connections to be operated; It's an old parameter, please switch to ProxyIds.
     * @param string $ProxyName Connection name. Up to 30 characters.
     * @param string $ClientToken A string used to ensure the idempotency of the request, which is generated by the user and must be unique to each request. The maximum length is 64 ASCII characters. If this parameter is not specified, the idempotency of the request cannot be guaranteed.
For more information, please see How to Ensure Idempotence.
     * @param array $ProxyIds ID of one or multiple connections to be operated; It's a new parameter.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("InstanceIds",$param) and $param["InstanceIds"] !== null) {
            $this->InstanceIds = $param["InstanceIds"];
        }

        if (array_key_exists("ProxyName",$param) and $param["ProxyName"] !== null) {
            $this->ProxyName = $param["ProxyName"];
        }

        if (array_key_exists("ClientToken",$param) and $param["ClientToken"] !== null) {
            $this->ClientToken = $param["ClientToken"];
        }

        if (array_key_exists("ProxyIds",$param) and $param["ProxyIds"] !== null) {
            $this->ProxyIds = $param["ProxyIds"];
        }
    }
}
