<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Dlc\V20210125\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeAdvancedStoreLocation response structure.
 *
 * @method integer getEnable() Obtain Whether to enable advanced settings. 0 means no while 1 means yes.
 * @method void setEnable(integer $Enable) Set Whether to enable advanced settings. 0 means no while 1 means yes.
 * @method string getStoreLocation() Obtain COS path of saving querying results
 * @method void setStoreLocation(string $StoreLocation) Set COS path of saving querying results
 * @method boolean getHasLakeFs() Obtain Whether there is permission for managed storage
 * @method void setHasLakeFs(boolean $HasLakeFs) Set Whether there is permission for managed storage
 * @method string getLakeFsStatus() Obtain Managed storage status. The value is meaningful only when HasLakeFs is equal to true.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setLakeFsStatus(string $LakeFsStatus) Set Managed storage status. The value is meaningful only when HasLakeFs is equal to true.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeAdvancedStoreLocationResponse extends AbstractModel
{
    /**
     * @var integer Whether to enable advanced settings. 0 means no while 1 means yes.
     */
    public $Enable;

    /**
     * @var string COS path of saving querying results
     */
    public $StoreLocation;

    /**
     * @var boolean Whether there is permission for managed storage
     */
    public $HasLakeFs;

    /**
     * @var string Managed storage status. The value is meaningful only when HasLakeFs is equal to true.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $LakeFsStatus;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Enable Whether to enable advanced settings. 0 means no while 1 means yes.
     * @param string $StoreLocation COS path of saving querying results
     * @param boolean $HasLakeFs Whether there is permission for managed storage
     * @param string $LakeFsStatus Managed storage status. The value is meaningful only when HasLakeFs is equal to true.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Enable",$param) and $param["Enable"] !== null) {
            $this->Enable = $param["Enable"];
        }

        if (array_key_exists("StoreLocation",$param) and $param["StoreLocation"] !== null) {
            $this->StoreLocation = $param["StoreLocation"];
        }

        if (array_key_exists("HasLakeFs",$param) and $param["HasLakeFs"] !== null) {
            $this->HasLakeFs = $param["HasLakeFs"];
        }

        if (array_key_exists("LakeFsStatus",$param) and $param["LakeFsStatus"] !== null) {
            $this->LakeFsStatus = $param["LakeFsStatus"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
