<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Redis\V20180412\Models;
use TencentCloud\Common\AbstractModel;

/**
 * InquiryPriceCreateInstance response structure.
 *
 * @method float getPrice() Obtain Price.
 * @method void setPrice(float $Price) Set Price.
 * @method float getHighPrecisionPrice() Obtain High precision price. 
 * @method void setHighPrecisionPrice(float $HighPrecisionPrice) Set High precision price. 
 * @method string getCurrency() Obtain Currency.
 * @method void setCurrency(string $Currency) Set Currency.
 * @method string getAmountUnit() Obtain Price unit.

 - pent: cent.
 - microPent: microcent.
 * @method void setAmountUnit(string $AmountUnit) Set Price unit.

 - pent: cent.
 - microPent: microcent.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class InquiryPriceCreateInstanceResponse extends AbstractModel
{
    /**
     * @var float Price.
     */
    public $Price;

    /**
     * @var float High precision price. 
     */
    public $HighPrecisionPrice;

    /**
     * @var string Currency.
     */
    public $Currency;

    /**
     * @var string Price unit.

 - pent: cent.
 - microPent: microcent.
     */
    public $AmountUnit;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param float $Price Price.
     * @param float $HighPrecisionPrice High precision price. 
     * @param string $Currency Currency.
     * @param string $AmountUnit Price unit.

 - pent: cent.
 - microPent: microcent.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Price",$param) and $param["Price"] !== null) {
            $this->Price = $param["Price"];
        }

        if (array_key_exists("HighPrecisionPrice",$param) and $param["HighPrecisionPrice"] !== null) {
            $this->HighPrecisionPrice = $param["HighPrecisionPrice"];
        }

        if (array_key_exists("Currency",$param) and $param["Currency"] !== null) {
            $this->Currency = $param["Currency"];
        }

        if (array_key_exists("AmountUnit",$param) and $param["AmountUnit"] !== null) {
            $this->AmountUnit = $param["AmountUnit"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
