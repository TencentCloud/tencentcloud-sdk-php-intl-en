<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Wedata\V20210820\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DeleteIntegrationTask response structure.
 *
 * @method boolean getData() Obtain Task Deletion Success or Failure Indicator
 * @method void setData(boolean $Data) Set Task Deletion Success or Failure Indicator
 * @method integer getDeleteFlag() Obtain Task Deletion Success or Failure Indicator
0 indicates deletion was successful
1 indicates failure, see DeleteErrInfo for the reason
100 indicates running or suspend task can't be deleted, the reason will also be written in DeleteErrInfo
Note: This field may return null, indicating that no valid value can be obtained.
 * @method void setDeleteFlag(integer $DeleteFlag) Set Task Deletion Success or Failure Indicator
0 indicates deletion was successful
1 indicates failure, see DeleteErrInfo for the reason
100 indicates running or suspend task can't be deleted, the reason will also be written in DeleteErrInfo
Note: This field may return null, indicating that no valid value can be obtained.
 * @method string getDeleteErrInfo() Obtain Reason for Deletion Failure
Note: This field may return null, indicating that no valid value can be obtained.
 * @method void setDeleteErrInfo(string $DeleteErrInfo) Set Reason for Deletion Failure
Note: This field may return null, indicating that no valid value can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DeleteIntegrationTaskResponse extends AbstractModel
{
    /**
     * @var boolean Task Deletion Success or Failure Indicator
     */
    public $Data;

    /**
     * @var integer Task Deletion Success or Failure Indicator
0 indicates deletion was successful
1 indicates failure, see DeleteErrInfo for the reason
100 indicates running or suspend task can't be deleted, the reason will also be written in DeleteErrInfo
Note: This field may return null, indicating that no valid value can be obtained.
     */
    public $DeleteFlag;

    /**
     * @var string Reason for Deletion Failure
Note: This field may return null, indicating that no valid value can be obtained.
     */
    public $DeleteErrInfo;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param boolean $Data Task Deletion Success or Failure Indicator
     * @param integer $DeleteFlag Task Deletion Success or Failure Indicator
0 indicates deletion was successful
1 indicates failure, see DeleteErrInfo for the reason
100 indicates running or suspend task can't be deleted, the reason will also be written in DeleteErrInfo
Note: This field may return null, indicating that no valid value can be obtained.
     * @param string $DeleteErrInfo Reason for Deletion Failure
Note: This field may return null, indicating that no valid value can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Data",$param) and $param["Data"] !== null) {
            $this->Data = $param["Data"];
        }

        if (array_key_exists("DeleteFlag",$param) and $param["DeleteFlag"] !== null) {
            $this->DeleteFlag = $param["DeleteFlag"];
        }

        if (array_key_exists("DeleteErrInfo",$param) and $param["DeleteErrInfo"] !== null) {
            $this->DeleteErrInfo = $param["DeleteErrInfo"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
