<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Wedata\V20210820\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeIntegrationTask response structure.
 *
 * @method IntegrationTaskInfo getTaskInfo() Obtain Task InformationNote: This field may return null, indicating that no valid value can be obtained.
 * @method void setTaskInfo(IntegrationTaskInfo $TaskInfo) Set Task InformationNote: This field may return null, indicating that no valid value can be obtained.
 * @method AgentStatus getAgentStatus() Obtain Collector statistics
Note: This field may return null, indicating that no valid value can be obtained.
 * @method void setAgentStatus(AgentStatus $AgentStatus) Set Collector statistics
Note: This field may return null, indicating that no valid value can be obtained.
 * @method TaskVersionInstance getTaskVersion() Obtain Task version information
Note: This field may return null, indicating that no valid value can be obtained.
 * @method void setTaskVersion(TaskVersionInstance $TaskVersion) Set Task version information
Note: This field may return null, indicating that no valid value can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeIntegrationTaskResponse extends AbstractModel
{
    /**
     * @var IntegrationTaskInfo Task InformationNote: This field may return null, indicating that no valid value can be obtained.
     */
    public $TaskInfo;

    /**
     * @var AgentStatus Collector statistics
Note: This field may return null, indicating that no valid value can be obtained.
     */
    public $AgentStatus;

    /**
     * @var TaskVersionInstance Task version information
Note: This field may return null, indicating that no valid value can be obtained.
     */
    public $TaskVersion;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param IntegrationTaskInfo $TaskInfo Task InformationNote: This field may return null, indicating that no valid value can be obtained.
     * @param AgentStatus $AgentStatus Collector statistics
Note: This field may return null, indicating that no valid value can be obtained.
     * @param TaskVersionInstance $TaskVersion Task version information
Note: This field may return null, indicating that no valid value can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TaskInfo",$param) and $param["TaskInfo"] !== null) {
            $this->TaskInfo = new IntegrationTaskInfo();
            $this->TaskInfo->deserialize($param["TaskInfo"]);
        }

        if (array_key_exists("AgentStatus",$param) and $param["AgentStatus"] !== null) {
            $this->AgentStatus = new AgentStatus();
            $this->AgentStatus->deserialize($param["AgentStatus"]);
        }

        if (array_key_exists("TaskVersion",$param) and $param["TaskVersion"] !== null) {
            $this->TaskVersion = new TaskVersionInstance();
            $this->TaskVersion->deserialize($param["TaskVersion"]);
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
