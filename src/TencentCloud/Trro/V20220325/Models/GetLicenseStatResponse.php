<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Trro\V20220325\Models;
use TencentCloud\Common\AbstractModel;

/**
 * GetLicenseStat response structure.
 *
 * @method integer getValid() Obtain Valid authorization.
 * @method void setValid(integer $Valid) Set Valid authorization.
 * @method integer getBound() Obtain Bound authorization.
 * @method void setBound(integer $Bound) Set Bound authorization.
 * @method integer getUnBound() Obtain Unbound authorization.
 * @method void setUnBound(integer $UnBound) Set Unbound authorization.
 * @method integer getExpire() Obtain Expired authorization.
 * @method void setExpire(integer $Expire) Set Expired authorization.
 * @method integer getMonthlyExpire() Obtain Number of authorization timeouts for the current month.
 * @method void setMonthlyExpire(integer $MonthlyExpire) Set Number of authorization timeouts for the current month.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class GetLicenseStatResponse extends AbstractModel
{
    /**
     * @var integer Valid authorization.
     */
    public $Valid;

    /**
     * @var integer Bound authorization.
     */
    public $Bound;

    /**
     * @var integer Unbound authorization.
     */
    public $UnBound;

    /**
     * @var integer Expired authorization.
     */
    public $Expire;

    /**
     * @var integer Number of authorization timeouts for the current month.
     */
    public $MonthlyExpire;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Valid Valid authorization.
     * @param integer $Bound Bound authorization.
     * @param integer $UnBound Unbound authorization.
     * @param integer $Expire Expired authorization.
     * @param integer $MonthlyExpire Number of authorization timeouts for the current month.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Valid",$param) and $param["Valid"] !== null) {
            $this->Valid = $param["Valid"];
        }

        if (array_key_exists("Bound",$param) and $param["Bound"] !== null) {
            $this->Bound = $param["Bound"];
        }

        if (array_key_exists("UnBound",$param) and $param["UnBound"] !== null) {
            $this->UnBound = $param["UnBound"];
        }

        if (array_key_exists("Expire",$param) and $param["Expire"] !== null) {
            $this->Expire = $param["Expire"];
        }

        if (array_key_exists("MonthlyExpire",$param) and $param["MonthlyExpire"] !== null) {
            $this->MonthlyExpire = $param["MonthlyExpire"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
