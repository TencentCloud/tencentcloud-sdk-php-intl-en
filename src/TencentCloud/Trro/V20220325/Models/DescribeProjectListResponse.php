<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Trro\V20220325\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeProjectList response structure.
 *
 * @method array getProjects() Obtain Array of project information.
 * @method void setProjects(array $Projects) Set Array of project information.
 * @method integer getTotal() Obtain Total number of projects.
 * @method void setTotal(integer $Total) Set Total number of projects.
 * @method integer getNum() Obtain Number of projects returned in this request.
 * @method void setNum(integer $Num) Set Number of projects returned in this request.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeProjectListResponse extends AbstractModel
{
    /**
     * @var array Array of project information.
     */
    public $Projects;

    /**
     * @var integer Total number of projects.
     */
    public $Total;

    /**
     * @var integer Number of projects returned in this request.
     */
    public $Num;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $Projects Array of project information.
     * @param integer $Total Total number of projects.
     * @param integer $Num Number of projects returned in this request.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Projects",$param) and $param["Projects"] !== null) {
            $this->Projects = [];
            foreach ($param["Projects"] as $key => $value){
                $obj = new ProjectInfo();
                $obj->deserialize($value);
                array_push($this->Projects, $obj);
            }
        }

        if (array_key_exists("Total",$param) and $param["Total"] !== null) {
            $this->Total = $param["Total"];
        }

        if (array_key_exists("Num",$param) and $param["Num"] !== null) {
            $this->Num = $param["Num"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
