<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Trro\V20220325\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeDeviceInfo response structure.
 *
 * @method string getDeviceName() Obtain Device name.
 * @method void setDeviceName(string $DeviceName) Set Device name.
 * @method string getDeviceType() Obtain Device type: "field" specifies on-site devices (controlled party), and "remote" specifies remote devices (controlling party).
 * @method void setDeviceType(string $DeviceType) Set Device type: "field" specifies on-site devices (controlled party), and "remote" specifies remote devices (controlling party).
 * @method string getDeviceStatus() Obtain Device status: offline means offline, ready means online and ready, connected means in session.
 * @method void setDeviceStatus(string $DeviceStatus) Set Device status: offline means offline, ready means online and ready, connected means in session.
 * @method string getLastReportTime() Obtain Last updated time of device status.
 * @method void setLastReportTime(string $LastReportTime) Set Last updated time of device status.
 * @method string getModifyTime() Obtain Modification time of device information.
 * @method void setModifyTime(string $ModifyTime) Set Modification time of device information.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeDeviceInfoResponse extends AbstractModel
{
    /**
     * @var string Device name.
     */
    public $DeviceName;

    /**
     * @var string Device type: "field" specifies on-site devices (controlled party), and "remote" specifies remote devices (controlling party).
     */
    public $DeviceType;

    /**
     * @var string Device status: offline means offline, ready means online and ready, connected means in session.
     */
    public $DeviceStatus;

    /**
     * @var string Last updated time of device status.
     */
    public $LastReportTime;

    /**
     * @var string Modification time of device information.
     */
    public $ModifyTime;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $DeviceName Device name.
     * @param string $DeviceType Device type: "field" specifies on-site devices (controlled party), and "remote" specifies remote devices (controlling party).
     * @param string $DeviceStatus Device status: offline means offline, ready means online and ready, connected means in session.
     * @param string $LastReportTime Last updated time of device status.
     * @param string $ModifyTime Modification time of device information.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("DeviceName",$param) and $param["DeviceName"] !== null) {
            $this->DeviceName = $param["DeviceName"];
        }

        if (array_key_exists("DeviceType",$param) and $param["DeviceType"] !== null) {
            $this->DeviceType = $param["DeviceType"];
        }

        if (array_key_exists("DeviceStatus",$param) and $param["DeviceStatus"] !== null) {
            $this->DeviceStatus = $param["DeviceStatus"];
        }

        if (array_key_exists("LastReportTime",$param) and $param["LastReportTime"] !== null) {
            $this->LastReportTime = $param["LastReportTime"];
        }

        if (array_key_exists("ModifyTime",$param) and $param["ModifyTime"] !== null) {
            $this->ModifyTime = $param["ModifyTime"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
