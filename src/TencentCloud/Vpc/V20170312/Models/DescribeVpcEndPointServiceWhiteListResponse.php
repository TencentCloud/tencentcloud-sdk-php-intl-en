<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Vpc\V20170312\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeVpcEndPointServiceWhiteList response structure.
 *
 * @method array getVpcEndpointServiceUserSet() Obtain Array of allowed endpoint services
 * @method void setVpcEndpointServiceUserSet(array $VpcEndpointServiceUserSet) Set Array of allowed endpoint services
 * @method integer getTotalCount() Obtain Number of matched allowlists
 * @method void setTotalCount(integer $TotalCount) Set Number of matched allowlists
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeVpcEndPointServiceWhiteListResponse extends AbstractModel
{
    /**
     * @var array Array of allowed endpoint services
     */
    public $VpcEndpointServiceUserSet;

    /**
     * @var integer Number of matched allowlists
     */
    public $TotalCount;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $VpcEndpointServiceUserSet Array of allowed endpoint services
     * @param integer $TotalCount Number of matched allowlists
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("VpcEndpointServiceUserSet",$param) and $param["VpcEndpointServiceUserSet"] !== null) {
            $this->VpcEndpointServiceUserSet = [];
            foreach ($param["VpcEndpointServiceUserSet"] as $key => $value){
                $obj = new VpcEndPointServiceUser();
                $obj->deserialize($value);
                array_push($this->VpcEndpointServiceUserSet, $obj);
            }
        }

        if (array_key_exists("TotalCount",$param) and $param["TotalCount"] !== null) {
            $this->TotalCount = $param["TotalCount"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
