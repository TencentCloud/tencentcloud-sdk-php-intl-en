<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Sqlserver\V20180328\Models;
use TencentCloud\Common\AbstractModel;

/**
 * InquiryPriceCreateDBInstances response structure.
 *
 * @method integer getOriginalPrice() Obtain Price before discount. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
 * @method void setOriginalPrice(integer $OriginalPrice) Set Price before discount. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
 * @method integer getPrice() Obtain The actual price to be paid. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
 * @method void setPrice(integer $Price) Set The actual price to be paid. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class InquiryPriceCreateDBInstancesResponse extends AbstractModel
{
    /**
     * @var integer Price before discount. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
     */
    public $OriginalPrice;

    /**
     * @var integer The actual price to be paid. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
     */
    public $Price;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $OriginalPrice Price before discount. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
     * @param integer $Price The actual price to be paid. This value divided by 100 indicates the price; for example, 10010 means 100.10 USD
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("OriginalPrice",$param) and $param["OriginalPrice"] !== null) {
            $this->OriginalPrice = $param["OriginalPrice"];
        }

        if (array_key_exists("Price",$param) and $param["Price"] !== null) {
            $this->Price = $param["Price"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
