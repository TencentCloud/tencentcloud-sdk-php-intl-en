<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Sqlserver\V20180328\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeMaintenanceSpan response structure.
 *
 * @method array getWeekly() Obtain Specifies the days in each week allowed for maintenance. For example, [1,2,3,4,5,6,7] indicates that all days from Monday to Sunday are allowed for maintenance.
 * @method void setWeekly(array $Weekly) Set Specifies the days in each week allowed for maintenance. For example, [1,2,3,4,5,6,7] indicates that all days from Monday to Sunday are allowed for maintenance.
 * @method string getStartTime() Obtain Maintenance start time each day. For example, 10:24 indicates that the maintenance window starts at 10:24.
 * @method void setStartTime(string $StartTime) Set Maintenance start time each day. For example, 10:24 indicates that the maintenance window starts at 10:24.
 * @method integer getSpan() Obtain Maintenance duration each day, in hours. For example, 1 indicates that the duration is 1 hour after maintenance starts.
 * @method void setSpan(integer $Span) Set Maintenance duration each day, in hours. For example, 1 indicates that the duration is 1 hour after maintenance starts.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeMaintenanceSpanResponse extends AbstractModel
{
    /**
     * @var array Specifies the days in each week allowed for maintenance. For example, [1,2,3,4,5,6,7] indicates that all days from Monday to Sunday are allowed for maintenance.
     */
    public $Weekly;

    /**
     * @var string Maintenance start time each day. For example, 10:24 indicates that the maintenance window starts at 10:24.
     */
    public $StartTime;

    /**
     * @var integer Maintenance duration each day, in hours. For example, 1 indicates that the duration is 1 hour after maintenance starts.
     */
    public $Span;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $Weekly Specifies the days in each week allowed for maintenance. For example, [1,2,3,4,5,6,7] indicates that all days from Monday to Sunday are allowed for maintenance.
     * @param string $StartTime Maintenance start time each day. For example, 10:24 indicates that the maintenance window starts at 10:24.
     * @param integer $Span Maintenance duration each day, in hours. For example, 1 indicates that the duration is 1 hour after maintenance starts.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Weekly",$param) and $param["Weekly"] !== null) {
            $this->Weekly = $param["Weekly"];
        }

        if (array_key_exists("StartTime",$param) and $param["StartTime"] !== null) {
            $this->StartTime = $param["StartTime"];
        }

        if (array_key_exists("Span",$param) and $param["Span"] !== null) {
            $this->Span = $param["Span"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
