<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Car\V20220110\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeApplicationList response structure.
 *
 * @method array getUserApplicationList() Obtain Application list information.
 * @method void setUserApplicationList(array $UserApplicationList) Set Application list information.
 * @method integer getApplicationTotal() Obtain Total number of applications.
 * @method void setApplicationTotal(integer $ApplicationTotal) Set Total number of applications.
 * @method array getUserMobileApplicationList() Obtain Mobile application list information.
 * @method void setUserMobileApplicationList(array $UserMobileApplicationList) Set Mobile application list information.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeApplicationListResponse extends AbstractModel
{
    /**
     * @var array Application list information.
     */
    public $UserApplicationList;

    /**
     * @var integer Total number of applications.
     */
    public $ApplicationTotal;

    /**
     * @var array Mobile application list information.
     */
    public $UserMobileApplicationList;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $UserApplicationList Application list information.
     * @param integer $ApplicationTotal Total number of applications.
     * @param array $UserMobileApplicationList Mobile application list information.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("UserApplicationList",$param) and $param["UserApplicationList"] !== null) {
            $this->UserApplicationList = [];
            foreach ($param["UserApplicationList"] as $key => $value){
                $obj = new UserApplicationInfo();
                $obj->deserialize($value);
                array_push($this->UserApplicationList, $obj);
            }
        }

        if (array_key_exists("ApplicationTotal",$param) and $param["ApplicationTotal"] !== null) {
            $this->ApplicationTotal = $param["ApplicationTotal"];
        }

        if (array_key_exists("UserMobileApplicationList",$param) and $param["UserMobileApplicationList"] !== null) {
            $this->UserMobileApplicationList = [];
            foreach ($param["UserMobileApplicationList"] as $key => $value){
                $obj = new UserMobileApplicationInfo();
                $obj->deserialize($value);
                array_push($this->UserMobileApplicationList, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
