<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Intlpartnersmgt\V20220928\Models;
use TencentCloud\Common\AbstractModel;

/**
 * QueryPartnerCredit response structure.
 *
 * @method float getAllocatedCredit() Obtain Allocated credit
 * @method void setAllocatedCredit(float $AllocatedCredit) Set Allocated credit
 * @method float getTotalCredit() Obtain Total credit
 * @method void setTotalCredit(float $TotalCredit) Set Total credit
 * @method float getRemainingCredit() Obtain Remaining credit
 * @method void setRemainingCredit(float $RemainingCredit) Set Remaining credit
 * @method float getCustomerTotalCredit() Obtain Allocated quota for the client
 * @method void setCustomerTotalCredit(float $CustomerTotalCredit) Set Allocated quota for the client
 * @method float getCustomerRemainingCredit() Obtain Remaining quota for the client
 * @method void setCustomerRemainingCredit(float $CustomerRemainingCredit) Set Remaining quota for the client
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class QueryPartnerCreditResponse extends AbstractModel
{
    /**
     * @var float Allocated credit
     */
    public $AllocatedCredit;

    /**
     * @var float Total credit
     */
    public $TotalCredit;

    /**
     * @var float Remaining credit
     */
    public $RemainingCredit;

    /**
     * @var float Allocated quota for the client
     */
    public $CustomerTotalCredit;

    /**
     * @var float Remaining quota for the client
     */
    public $CustomerRemainingCredit;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param float $AllocatedCredit Allocated credit
     * @param float $TotalCredit Total credit
     * @param float $RemainingCredit Remaining credit
     * @param float $CustomerTotalCredit Allocated quota for the client
     * @param float $CustomerRemainingCredit Remaining quota for the client
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("AllocatedCredit",$param) and $param["AllocatedCredit"] !== null) {
            $this->AllocatedCredit = $param["AllocatedCredit"];
        }

        if (array_key_exists("TotalCredit",$param) and $param["TotalCredit"] !== null) {
            $this->TotalCredit = $param["TotalCredit"];
        }

        if (array_key_exists("RemainingCredit",$param) and $param["RemainingCredit"] !== null) {
            $this->RemainingCredit = $param["RemainingCredit"];
        }

        if (array_key_exists("CustomerTotalCredit",$param) and $param["CustomerTotalCredit"] !== null) {
            $this->CustomerTotalCredit = $param["CustomerTotalCredit"];
        }

        if (array_key_exists("CustomerRemainingCredit",$param) and $param["CustomerRemainingCredit"] !== null) {
            $this->CustomerRemainingCredit = $param["CustomerRemainingCredit"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
