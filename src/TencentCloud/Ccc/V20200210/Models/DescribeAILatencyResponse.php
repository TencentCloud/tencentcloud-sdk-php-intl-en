<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Ccc\V20200210\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeAILatency response structure.
 *
 * @method array getAILatencyDetail() Obtain Detailed data of latency.
-1 indicates no corresponding data.
 * @method void setAILatencyDetail(array $AILatencyDetail) Set Detailed data of latency.
-1 indicates no corresponding data.
 * @method AILatencyStatistics getAILatencyStatistics() Obtain Latency statistical data.
-1 indicates no corresponding data.
 * @method void setAILatencyStatistics(AILatencyStatistics $AILatencyStatistics) Set Latency statistical data.
-1 indicates no corresponding data.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeAILatencyResponse extends AbstractModel
{
    /**
     * @var array Detailed data of latency.
-1 indicates no corresponding data.
     */
    public $AILatencyDetail;

    /**
     * @var AILatencyStatistics Latency statistical data.
-1 indicates no corresponding data.
     */
    public $AILatencyStatistics;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $AILatencyDetail Detailed data of latency.
-1 indicates no corresponding data.
     * @param AILatencyStatistics $AILatencyStatistics Latency statistical data.
-1 indicates no corresponding data.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("AILatencyDetail",$param) and $param["AILatencyDetail"] !== null) {
            $this->AILatencyDetail = [];
            foreach ($param["AILatencyDetail"] as $key => $value){
                $obj = new AILatencyDetail();
                $obj->deserialize($value);
                array_push($this->AILatencyDetail, $obj);
            }
        }

        if (array_key_exists("AILatencyStatistics",$param) and $param["AILatencyStatistics"] !== null) {
            $this->AILatencyStatistics = new AILatencyStatistics();
            $this->AILatencyStatistics->deserialize($param["AILatencyStatistics"]);
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
