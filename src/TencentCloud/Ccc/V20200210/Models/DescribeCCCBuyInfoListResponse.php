<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Ccc\V20200210\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeCCCBuyInfoList response structure.
 *
 * @method integer getTotalCount() Obtain Total number of applications.
 * @method void setTotalCount(integer $TotalCount) Set Total number of applications.
 * @method array getSdkAppIdBuyList() Obtain Application purchase information list.
 * @method void setSdkAppIdBuyList(array $SdkAppIdBuyList) Set Application purchase information list.
 * @method array getPackageBuyList() Obtain Package purchase information list.
 * @method void setPackageBuyList(array $PackageBuyList) Set Package purchase information list.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeCCCBuyInfoListResponse extends AbstractModel
{
    /**
     * @var integer Total number of applications.
     */
    public $TotalCount;

    /**
     * @var array Application purchase information list.
     */
    public $SdkAppIdBuyList;

    /**
     * @var array Package purchase information list.
     */
    public $PackageBuyList;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $TotalCount Total number of applications.
     * @param array $SdkAppIdBuyList Application purchase information list.
     * @param array $PackageBuyList Package purchase information list.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TotalCount",$param) and $param["TotalCount"] !== null) {
            $this->TotalCount = $param["TotalCount"];
        }

        if (array_key_exists("SdkAppIdBuyList",$param) and $param["SdkAppIdBuyList"] !== null) {
            $this->SdkAppIdBuyList = [];
            foreach ($param["SdkAppIdBuyList"] as $key => $value){
                $obj = new SdkAppIdBuyInfo();
                $obj->deserialize($value);
                array_push($this->SdkAppIdBuyList, $obj);
            }
        }

        if (array_key_exists("PackageBuyList",$param) and $param["PackageBuyList"] !== null) {
            $this->PackageBuyList = [];
            foreach ($param["PackageBuyList"] as $key => $value){
                $obj = new PackageBuyInfo();
                $obj->deserialize($value);
                array_push($this->PackageBuyList, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
