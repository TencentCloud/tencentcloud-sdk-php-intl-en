<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Mongodb\V20190725\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeDBInstanceNodeProperty response structure.
 *
 * @method array getMongos() Obtain Mongos node attributes.
 * @method void setMongos(array $Mongos) Set Mongos node attributes.
 * @method array getReplicateSets() Obtain Replica set node information.
 * @method void setReplicateSets(array $ReplicateSets) Set Replica set node information.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeDBInstanceNodePropertyResponse extends AbstractModel
{
    /**
     * @var array Mongos node attributes.
     */
    public $Mongos;

    /**
     * @var array Replica set node information.
     */
    public $ReplicateSets;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $Mongos Mongos node attributes.
     * @param array $ReplicateSets Replica set node information.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Mongos",$param) and $param["Mongos"] !== null) {
            $this->Mongos = [];
            foreach ($param["Mongos"] as $key => $value){
                $obj = new NodeProperty();
                $obj->deserialize($value);
                array_push($this->Mongos, $obj);
            }
        }

        if (array_key_exists("ReplicateSets",$param) and $param["ReplicateSets"] !== null) {
            $this->ReplicateSets = [];
            foreach ($param["ReplicateSets"] as $key => $value){
                $obj = new ReplicateSetInfo();
                $obj->deserialize($value);
                array_push($this->ReplicateSets, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
