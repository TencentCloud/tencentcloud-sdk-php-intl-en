<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeServersAndRiskAndFirstInfo response structure.
 *
 * @method integer getRiskFileCount() Obtain Number of risky files
 * @method void setRiskFileCount(integer $RiskFileCount) Set Number of risky files
 * @method integer getAddRiskFileCount() Obtain New risky files today
 * @method void setAddRiskFileCount(integer $AddRiskFileCount) Set New risky files today
 * @method integer getServersCount() Obtain Number of affected servers
 * @method void setServersCount(integer $ServersCount) Set Number of affected servers
 * @method boolean getIsFirstCheck() Obtain Whether it is in trial. true: yes; false: no.
 * @method void setIsFirstCheck(boolean $IsFirstCheck) Set Whether it is in trial. true: yes; false: no.
 * @method string getScanTime() Obtain Last Trojan detection time
 * @method void setScanTime(string $ScanTime) Set Last Trojan detection time
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeServersAndRiskAndFirstInfoResponse extends AbstractModel
{
    /**
     * @var integer Number of risky files
     */
    public $RiskFileCount;

    /**
     * @var integer New risky files today
     */
    public $AddRiskFileCount;

    /**
     * @var integer Number of affected servers
     */
    public $ServersCount;

    /**
     * @var boolean Whether it is in trial. true: yes; false: no.
     */
    public $IsFirstCheck;

    /**
     * @var string Last Trojan detection time
     */
    public $ScanTime;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $RiskFileCount Number of risky files
     * @param integer $AddRiskFileCount New risky files today
     * @param integer $ServersCount Number of affected servers
     * @param boolean $IsFirstCheck Whether it is in trial. true: yes; false: no.
     * @param string $ScanTime Last Trojan detection time
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("RiskFileCount",$param) and $param["RiskFileCount"] !== null) {
            $this->RiskFileCount = $param["RiskFileCount"];
        }

        if (array_key_exists("AddRiskFileCount",$param) and $param["AddRiskFileCount"] !== null) {
            $this->AddRiskFileCount = $param["AddRiskFileCount"];
        }

        if (array_key_exists("ServersCount",$param) and $param["ServersCount"] !== null) {
            $this->ServersCount = $param["ServersCount"];
        }

        if (array_key_exists("IsFirstCheck",$param) and $param["IsFirstCheck"] !== null) {
            $this->IsFirstCheck = $param["IsFirstCheck"];
        }

        if (array_key_exists("ScanTime",$param) and $param["ScanTime"] !== null) {
            $this->ScanTime = $param["ScanTime"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
