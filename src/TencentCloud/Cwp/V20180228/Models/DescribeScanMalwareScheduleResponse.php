<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeScanMalwareSchedule response structure.
 *
 * @method integer getSchedule() Obtain Scan progress (unit: %)
 * @method void setSchedule(integer $Schedule) Set Scan progress (unit: %)
 * @method integer getRiskFileNumber() Obtain Number of risk files, which is only available after the scan is completed.
 * @method void setRiskFileNumber(integer $RiskFileNumber) Set Number of risk files, which is only available after the scan is completed.
 * @method boolean getIsSchedule() Obtain Whether scan in progress
 * @method void setIsSchedule(boolean $IsSchedule) Set Whether scan in progress
 * @method integer getScanStatus() Obtain 0 - never scanned; 1 - scan in progress; 2 - scan completed; 3 - stop in progress; 4 - stop completed
 * @method void setScanStatus(integer $ScanStatus) Set 0 - never scanned; 1 - scan in progress; 2 - scan completed; 3 - stop in progress; 4 - stop completed
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeScanMalwareScheduleResponse extends AbstractModel
{
    /**
     * @var integer Scan progress (unit: %)
     */
    public $Schedule;

    /**
     * @var integer Number of risk files, which is only available after the scan is completed.
     */
    public $RiskFileNumber;

    /**
     * @var boolean Whether scan in progress
     */
    public $IsSchedule;

    /**
     * @var integer 0 - never scanned; 1 - scan in progress; 2 - scan completed; 3 - stop in progress; 4 - stop completed
     */
    public $ScanStatus;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Schedule Scan progress (unit: %)
     * @param integer $RiskFileNumber Number of risk files, which is only available after the scan is completed.
     * @param boolean $IsSchedule Whether scan in progress
     * @param integer $ScanStatus 0 - never scanned; 1 - scan in progress; 2 - scan completed; 3 - stop in progress; 4 - stop completed
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Schedule",$param) and $param["Schedule"] !== null) {
            $this->Schedule = $param["Schedule"];
        }

        if (array_key_exists("RiskFileNumber",$param) and $param["RiskFileNumber"] !== null) {
            $this->RiskFileNumber = $param["RiskFileNumber"];
        }

        if (array_key_exists("IsSchedule",$param) and $param["IsSchedule"] !== null) {
            $this->IsSchedule = $param["IsSchedule"];
        }

        if (array_key_exists("ScanStatus",$param) and $param["ScanStatus"] !== null) {
            $this->ScanStatus = $param["ScanStatus"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
