<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * SearchLog response structure.
 *
 * @method integer getCount() Obtain Number of raw logs matching the retrieval criteria
 * @method void setCount(integer $Count) Set Number of raw logs matching the retrieval criteria
 * @method string getContext() Obtain Pass through the Context value returned by this API, which can access more logs later, with an expiration time of 1 hour.
 * @method void setContext(string $Context) Set Pass through the Context value returned by this API, which can access more logs later, with an expiration time of 1 hour.
 * @method boolean getListOver() Obtain Whether all logs meeting the retrieval criteria have been returned. If not, use the Context parameter to retrieve more logs.
 * @method void setListOver(boolean $ListOver) Set Whether all logs meeting the retrieval criteria have been returned. If not, use the Context parameter to retrieve more logs.
 * @method boolean getAnalysis() Obtain Whether the returned data is the SQL analysis result
 * @method void setAnalysis(boolean $Analysis) Set Whether the returned data is the SQL analysis result
 * @method array getData() Obtain Raw logs matching the retrieval criteria
 * @method void setData(array $Data) Set Raw logs matching the retrieval criteria
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class SearchLogResponse extends AbstractModel
{
    /**
     * @var integer Number of raw logs matching the retrieval criteria
     */
    public $Count;

    /**
     * @var string Pass through the Context value returned by this API, which can access more logs later, with an expiration time of 1 hour.
     */
    public $Context;

    /**
     * @var boolean Whether all logs meeting the retrieval criteria have been returned. If not, use the Context parameter to retrieve more logs.
     */
    public $ListOver;

    /**
     * @var boolean Whether the returned data is the SQL analysis result
     */
    public $Analysis;

    /**
     * @var array Raw logs matching the retrieval criteria
     */
    public $Data;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Count Number of raw logs matching the retrieval criteria
     * @param string $Context Pass through the Context value returned by this API, which can access more logs later, with an expiration time of 1 hour.
     * @param boolean $ListOver Whether all logs meeting the retrieval criteria have been returned. If not, use the Context parameter to retrieve more logs.
     * @param boolean $Analysis Whether the returned data is the SQL analysis result
     * @param array $Data Raw logs matching the retrieval criteria
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Count",$param) and $param["Count"] !== null) {
            $this->Count = $param["Count"];
        }

        if (array_key_exists("Context",$param) and $param["Context"] !== null) {
            $this->Context = $param["Context"];
        }

        if (array_key_exists("ListOver",$param) and $param["ListOver"] !== null) {
            $this->ListOver = $param["ListOver"];
        }

        if (array_key_exists("Analysis",$param) and $param["Analysis"] !== null) {
            $this->Analysis = $param["Analysis"];
        }

        if (array_key_exists("Data",$param) and $param["Data"] !== null) {
            $this->Data = [];
            foreach ($param["Data"] as $key => $value){
                $obj = new LogInfo();
                $obj->deserialize($value);
                array_push($this->Data, $obj);
            }
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
