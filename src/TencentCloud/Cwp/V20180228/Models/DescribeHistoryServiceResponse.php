<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeHistoryService response structure.
 *
 * @method integer getBuyStatus() Obtain 1: available for purchase; 2: specification adjustment only; 3: redirection to renewal management page only.
 * @method void setBuyStatus(integer $BuyStatus) Set 1: available for purchase; 2: specification adjustment only; 3: redirection to renewal management page only.
 * @method integer getInquireNum() Obtain Capacity purchased by the user, in GB
 * @method void setInquireNum(integer $InquireNum) Set Capacity purchased by the user, in GB
 * @method string getEndTime() Obtain Expiration time
 * @method void setEndTime(string $EndTime) Set Expiration time
 * @method integer getIsAutoOpenRenew() Obtain Whether automatic renewal is enabled. 0: initial value; 1: enabled; 2: disabled.
 * @method void setIsAutoOpenRenew(integer $IsAutoOpenRenew) Set Whether automatic renewal is enabled. 0: initial value; 1: enabled; 2: disabled.
 * @method string getResourceId() Obtain Resource ID
 * @method void setResourceId(string $ResourceId) Set Resource ID
 * @method integer getStatus() Obtain 0: not activated; 1: normal; 2: isolated; 3: terminated.
 * @method void setStatus(integer $Status) Set 0: not activated; 1: normal; 2: isolated; 3: terminated.
 * @method string getStartTime() Obtain Start time
 * @method void setStartTime(string $StartTime) Set Start time
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeHistoryServiceResponse extends AbstractModel
{
    /**
     * @var integer 1: available for purchase; 2: specification adjustment only; 3: redirection to renewal management page only.
     */
    public $BuyStatus;

    /**
     * @var integer Capacity purchased by the user, in GB
     */
    public $InquireNum;

    /**
     * @var string Expiration time
     */
    public $EndTime;

    /**
     * @var integer Whether automatic renewal is enabled. 0: initial value; 1: enabled; 2: disabled.
     */
    public $IsAutoOpenRenew;

    /**
     * @var string Resource ID
     */
    public $ResourceId;

    /**
     * @var integer 0: not activated; 1: normal; 2: isolated; 3: terminated.
     */
    public $Status;

    /**
     * @var string Start time
     */
    public $StartTime;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $BuyStatus 1: available for purchase; 2: specification adjustment only; 3: redirection to renewal management page only.
     * @param integer $InquireNum Capacity purchased by the user, in GB
     * @param string $EndTime Expiration time
     * @param integer $IsAutoOpenRenew Whether automatic renewal is enabled. 0: initial value; 1: enabled; 2: disabled.
     * @param string $ResourceId Resource ID
     * @param integer $Status 0: not activated; 1: normal; 2: isolated; 3: terminated.
     * @param string $StartTime Start time
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("BuyStatus",$param) and $param["BuyStatus"] !== null) {
            $this->BuyStatus = $param["BuyStatus"];
        }

        if (array_key_exists("InquireNum",$param) and $param["InquireNum"] !== null) {
            $this->InquireNum = $param["InquireNum"];
        }

        if (array_key_exists("EndTime",$param) and $param["EndTime"] !== null) {
            $this->EndTime = $param["EndTime"];
        }

        if (array_key_exists("IsAutoOpenRenew",$param) and $param["IsAutoOpenRenew"] !== null) {
            $this->IsAutoOpenRenew = $param["IsAutoOpenRenew"];
        }

        if (array_key_exists("ResourceId",$param) and $param["ResourceId"] !== null) {
            $this->ResourceId = $param["ResourceId"];
        }

        if (array_key_exists("Status",$param) and $param["Status"] !== null) {
            $this->Status = $param["Status"];
        }

        if (array_key_exists("StartTime",$param) and $param["StartTime"] !== null) {
            $this->StartTime = $param["StartTime"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
