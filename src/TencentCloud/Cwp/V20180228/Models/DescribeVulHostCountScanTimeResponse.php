<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeVulHostCountScanTime response structure.
 *
 * @method integer getTotalVulCount() Obtain Total number of vulnerabilities
 * @method void setTotalVulCount(integer $TotalVulCount) Set Total number of vulnerabilities
 * @method integer getVulHostCount() Obtain Number of hosts affected by vulnerabilities
 * @method void setVulHostCount(integer $VulHostCount) Set Number of hosts affected by vulnerabilities
 * @method string getScanTime() Obtain Scan time
 * @method void setScanTime(string $ScanTime) Set Scan time
 * @method boolean getIfFirstScan() Obtain Whether the detection is carried out for the first time
 * @method void setIfFirstScan(boolean $IfFirstScan) Set Whether the detection is carried out for the first time
 * @method integer getTaskId() Obtain ID of the ongoing task. The value is 0 if no such task exists.
 * @method void setTaskId(integer $TaskId) Set ID of the ongoing task. The value is 0 if no such task exists.
 * @method string getLastFixTime() Obtain Last vulnerability fixing time
 * @method void setLastFixTime(string $LastFixTime) Set Last vulnerability fixing time
 * @method boolean gethadAutoFixVul() Obtain Whether vulnerabilities supporting automatic fixing exist
 * @method void sethadAutoFixVul(boolean $hadAutoFixVul) Set Whether vulnerabilities supporting automatic fixing exist
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeVulHostCountScanTimeResponse extends AbstractModel
{
    /**
     * @var integer Total number of vulnerabilities
     */
    public $TotalVulCount;

    /**
     * @var integer Number of hosts affected by vulnerabilities
     */
    public $VulHostCount;

    /**
     * @var string Scan time
     */
    public $ScanTime;

    /**
     * @var boolean Whether the detection is carried out for the first time
     */
    public $IfFirstScan;

    /**
     * @var integer ID of the ongoing task. The value is 0 if no such task exists.
     */
    public $TaskId;

    /**
     * @var string Last vulnerability fixing time
     */
    public $LastFixTime;

    /**
     * @var boolean Whether vulnerabilities supporting automatic fixing exist
     */
    public $hadAutoFixVul;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $TotalVulCount Total number of vulnerabilities
     * @param integer $VulHostCount Number of hosts affected by vulnerabilities
     * @param string $ScanTime Scan time
     * @param boolean $IfFirstScan Whether the detection is carried out for the first time
     * @param integer $TaskId ID of the ongoing task. The value is 0 if no such task exists.
     * @param string $LastFixTime Last vulnerability fixing time
     * @param boolean $hadAutoFixVul Whether vulnerabilities supporting automatic fixing exist
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("TotalVulCount",$param) and $param["TotalVulCount"] !== null) {
            $this->TotalVulCount = $param["TotalVulCount"];
        }

        if (array_key_exists("VulHostCount",$param) and $param["VulHostCount"] !== null) {
            $this->VulHostCount = $param["VulHostCount"];
        }

        if (array_key_exists("ScanTime",$param) and $param["ScanTime"] !== null) {
            $this->ScanTime = $param["ScanTime"];
        }

        if (array_key_exists("IfFirstScan",$param) and $param["IfFirstScan"] !== null) {
            $this->IfFirstScan = $param["IfFirstScan"];
        }

        if (array_key_exists("TaskId",$param) and $param["TaskId"] !== null) {
            $this->TaskId = $param["TaskId"];
        }

        if (array_key_exists("LastFixTime",$param) and $param["LastFixTime"] !== null) {
            $this->LastFixTime = $param["LastFixTime"];
        }

        if (array_key_exists("hadAutoFixVul",$param) and $param["hadAutoFixVul"] !== null) {
            $this->hadAutoFixVul = $param["hadAutoFixVul"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
