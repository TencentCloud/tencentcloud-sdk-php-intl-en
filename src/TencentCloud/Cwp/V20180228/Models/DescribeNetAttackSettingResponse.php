<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeNetAttackSetting response structure.
 *
 * @method integer getNetAttackEnable() Obtain 0 - Disable Network Attack Detection; 1 - Enable Network Attack Detection.
 * @method void setNetAttackEnable(integer $NetAttackEnable) Set 0 - Disable Network Attack Detection; 1 - Enable Network Attack Detection.
 * @method integer getNetAttackAlarmStatus() Obtain 0: New warning events pending processing by default, 1: New warning events processed by default, 3: New warning events ignored by default.
 * @method void setNetAttackAlarmStatus(integer $NetAttackAlarmStatus) Set 0: New warning events pending processing by default, 1: New warning events processed by default, 3: New warning events ignored by default.
 * @method integer getScope() Obtain 1 - All Premium Edition Hosts, 0 - Hosts in InstanceIds List
 * @method void setScope(integer $Scope) Set 1 - All Premium Edition Hosts, 0 - Hosts in InstanceIds List
 * @method array getInstanceIds() Obtain Selected hosts
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setInstanceIds(array $InstanceIds) Set Selected hosts
Note: This field may return null, indicating that no valid values can be obtained.
 * @method array getExcludeInstanceIds() Obtain Custom Hosts to Exclude
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setExcludeInstanceIds(array $ExcludeInstanceIds) Set Custom Hosts to Exclude
Note: This field may return null, indicating that no valid values can be obtained.
 * @method integer getAutoInclude() Obtain New assets automatically include: 0 - Do not include, 1 - include.
 * @method void setAutoInclude(integer $AutoInclude) Set New assets automatically include: 0 - Do not include, 1 - include.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeNetAttackSettingResponse extends AbstractModel
{
    /**
     * @var integer 0 - Disable Network Attack Detection; 1 - Enable Network Attack Detection.
     */
    public $NetAttackEnable;

    /**
     * @var integer 0: New warning events pending processing by default, 1: New warning events processed by default, 3: New warning events ignored by default.
     */
    public $NetAttackAlarmStatus;

    /**
     * @var integer 1 - All Premium Edition Hosts, 0 - Hosts in InstanceIds List
     */
    public $Scope;

    /**
     * @var array Selected hosts
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $InstanceIds;

    /**
     * @var array Custom Hosts to Exclude
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $ExcludeInstanceIds;

    /**
     * @var integer New assets automatically include: 0 - Do not include, 1 - include.
     */
    public $AutoInclude;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $NetAttackEnable 0 - Disable Network Attack Detection; 1 - Enable Network Attack Detection.
     * @param integer $NetAttackAlarmStatus 0: New warning events pending processing by default, 1: New warning events processed by default, 3: New warning events ignored by default.
     * @param integer $Scope 1 - All Premium Edition Hosts, 0 - Hosts in InstanceIds List
     * @param array $InstanceIds Selected hosts
Note: This field may return null, indicating that no valid values can be obtained.
     * @param array $ExcludeInstanceIds Custom Hosts to Exclude
Note: This field may return null, indicating that no valid values can be obtained.
     * @param integer $AutoInclude New assets automatically include: 0 - Do not include, 1 - include.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("NetAttackEnable",$param) and $param["NetAttackEnable"] !== null) {
            $this->NetAttackEnable = $param["NetAttackEnable"];
        }

        if (array_key_exists("NetAttackAlarmStatus",$param) and $param["NetAttackAlarmStatus"] !== null) {
            $this->NetAttackAlarmStatus = $param["NetAttackAlarmStatus"];
        }

        if (array_key_exists("Scope",$param) and $param["Scope"] !== null) {
            $this->Scope = $param["Scope"];
        }

        if (array_key_exists("InstanceIds",$param) and $param["InstanceIds"] !== null) {
            $this->InstanceIds = $param["InstanceIds"];
        }

        if (array_key_exists("ExcludeInstanceIds",$param) and $param["ExcludeInstanceIds"] !== null) {
            $this->ExcludeInstanceIds = $param["ExcludeInstanceIds"];
        }

        if (array_key_exists("AutoInclude",$param) and $param["AutoInclude"] !== null) {
            $this->AutoInclude = $param["AutoInclude"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
