<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * Trojan allowlist information
 *
 * @method integer getId() Obtain Unique ID
 * @method void setId(integer $Id) Set Unique ID
 * @method string getQuuidList() Obtain CVM QUUID (Separate multiple items with commas.)
 * @method void setQuuidList(string $QuuidList) Set CVM QUUID (Separate multiple items with commas.)
 * @method string getMd5List() Obtain md5 list (Separate multiple items with commas.)
 * @method void setMd5List(string $Md5List) Set md5 list (Separate multiple items with commas.)
 * @method integer getIsGlobal() Obtain Whether applies all hosts: 0 - no; 1 - yes
 * @method void setIsGlobal(integer $IsGlobal) Set Whether applies all hosts: 0 - no; 1 - yes
 * @method integer getMode() Obtain Allowlist mode: 0 - MD5; 1 - customization
 * @method void setMode(integer $Mode) Set Allowlist mode: 0 - MD5; 1 - customization
 * @method integer getMatchType() Obtain Match mode: 0 - precise match; 1 - fuzzy match
 * @method void setMatchType(integer $MatchType) Set Match mode: 0 - precise match; 1 - fuzzy match
 * @method string getFileName() Obtain File name (Separate multiple items with commas.)
 * @method void setFileName(string $FileName) Set File name (Separate multiple items with commas.)
 * @method string getFileDirectory() Obtain File directory (Separate multiple items with commas.)
 * @method void setFileDirectory(string $FileDirectory) Set File directory (Separate multiple items with commas.)
 * @method string getFileExtension() Obtain File suffix (Separate multiple items with commas.)
 * @method void setFileExtension(string $FileExtension) Set File suffix (Separate multiple items with commas.)
 * @method string getCreateTime() Obtain Rule creation time
 * @method void setCreateTime(string $CreateTime) Set Rule creation time
 * @method integer getEventsCount() Obtain Affected records
 * @method void setEventsCount(integer $EventsCount) Set Affected records
 */
class MalwareWhiteListInfo extends AbstractModel
{
    /**
     * @var integer Unique ID
     */
    public $Id;

    /**
     * @var string CVM QUUID (Separate multiple items with commas.)
     */
    public $QuuidList;

    /**
     * @var string md5 list (Separate multiple items with commas.)
     */
    public $Md5List;

    /**
     * @var integer Whether applies all hosts: 0 - no; 1 - yes
     */
    public $IsGlobal;

    /**
     * @var integer Allowlist mode: 0 - MD5; 1 - customization
     */
    public $Mode;

    /**
     * @var integer Match mode: 0 - precise match; 1 - fuzzy match
     */
    public $MatchType;

    /**
     * @var string File name (Separate multiple items with commas.)
     */
    public $FileName;

    /**
     * @var string File directory (Separate multiple items with commas.)
     */
    public $FileDirectory;

    /**
     * @var string File suffix (Separate multiple items with commas.)
     */
    public $FileExtension;

    /**
     * @var string Rule creation time
     */
    public $CreateTime;

    /**
     * @var integer Affected records
     */
    public $EventsCount;

    /**
     * @param integer $Id Unique ID
     * @param string $QuuidList CVM QUUID (Separate multiple items with commas.)
     * @param string $Md5List md5 list (Separate multiple items with commas.)
     * @param integer $IsGlobal Whether applies all hosts: 0 - no; 1 - yes
     * @param integer $Mode Allowlist mode: 0 - MD5; 1 - customization
     * @param integer $MatchType Match mode: 0 - precise match; 1 - fuzzy match
     * @param string $FileName File name (Separate multiple items with commas.)
     * @param string $FileDirectory File directory (Separate multiple items with commas.)
     * @param string $FileExtension File suffix (Separate multiple items with commas.)
     * @param string $CreateTime Rule creation time
     * @param integer $EventsCount Affected records
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Id",$param) and $param["Id"] !== null) {
            $this->Id = $param["Id"];
        }

        if (array_key_exists("QuuidList",$param) and $param["QuuidList"] !== null) {
            $this->QuuidList = $param["QuuidList"];
        }

        if (array_key_exists("Md5List",$param) and $param["Md5List"] !== null) {
            $this->Md5List = $param["Md5List"];
        }

        if (array_key_exists("IsGlobal",$param) and $param["IsGlobal"] !== null) {
            $this->IsGlobal = $param["IsGlobal"];
        }

        if (array_key_exists("Mode",$param) and $param["Mode"] !== null) {
            $this->Mode = $param["Mode"];
        }

        if (array_key_exists("MatchType",$param) and $param["MatchType"] !== null) {
            $this->MatchType = $param["MatchType"];
        }

        if (array_key_exists("FileName",$param) and $param["FileName"] !== null) {
            $this->FileName = $param["FileName"];
        }

        if (array_key_exists("FileDirectory",$param) and $param["FileDirectory"] !== null) {
            $this->FileDirectory = $param["FileDirectory"];
        }

        if (array_key_exists("FileExtension",$param) and $param["FileExtension"] !== null) {
            $this->FileExtension = $param["FileExtension"];
        }

        if (array_key_exists("CreateTime",$param) and $param["CreateTime"] !== null) {
            $this->CreateTime = $param["CreateTime"];
        }

        if (array_key_exists("EventsCount",$param) and $param["EventsCount"] !== null) {
            $this->EventsCount = $param["EventsCount"];
        }
    }
}
