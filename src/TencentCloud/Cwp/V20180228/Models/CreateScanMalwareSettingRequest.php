<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * CreateScanMalwareSetting request structure.
 *
 * @method integer getScanPattern() Obtain Scan mode: 0 - full disk scan; 1 - rapid scan
 * @method void setScanPattern(integer $ScanPattern) Set Scan mode: 0 - full disk scan; 1 - rapid scan
 * @method integer getHostType() Obtain Server classification: 1: Professional Edition servers; 2: self-selected servers
 * @method void setHostType(integer $HostType) Set Server classification: 1: Professional Edition servers; 2: self-selected servers
 * @method array getQuuidList() Obtain Effective for selected servers; a string array of host QUUIDs
 * @method void setQuuidList(array $QuuidList) Set Effective for selected servers; a string array of host QUUIDs
 * @method integer getTimeoutPeriod() Obtain Timeout unit: seconds, which is 3,600 seconds by default.
 * @method void setTimeoutPeriod(integer $TimeoutPeriod) Set Timeout unit: seconds, which is 3,600 seconds by default.
 * @method integer getEngineType() Obtain 1 - standard mode (only critical and high-risk are reported.); 2 - enhanced mode (critical, high-risk, and medium-risk are reported.); 3 - strict mode (critical, high-risk, medium-risk, low-risk, and prompt are reported.)
 * @method void setEngineType(integer $EngineType) Set 1 - standard mode (only critical and high-risk are reported.); 2 - enhanced mode (critical, high-risk, and medium-risk are reported.); 3 - strict mode (critical, high-risk, medium-risk, low-risk, and prompt are reported.)
 * @method integer getEnableMemShellScan() Obtain Whether to enable malicious process killing [0: Not Enabled; 1: Enabled]
 * @method void setEnableMemShellScan(integer $EnableMemShellScan) Set Whether to enable malicious process killing [0: Not Enabled; 1: Enabled]
 */
class CreateScanMalwareSettingRequest extends AbstractModel
{
    /**
     * @var integer Scan mode: 0 - full disk scan; 1 - rapid scan
     */
    public $ScanPattern;

    /**
     * @var integer Server classification: 1: Professional Edition servers; 2: self-selected servers
     */
    public $HostType;

    /**
     * @var array Effective for selected servers; a string array of host QUUIDs
     */
    public $QuuidList;

    /**
     * @var integer Timeout unit: seconds, which is 3,600 seconds by default.
     */
    public $TimeoutPeriod;

    /**
     * @var integer 1 - standard mode (only critical and high-risk are reported.); 2 - enhanced mode (critical, high-risk, and medium-risk are reported.); 3 - strict mode (critical, high-risk, medium-risk, low-risk, and prompt are reported.)
     */
    public $EngineType;

    /**
     * @var integer Whether to enable malicious process killing [0: Not Enabled; 1: Enabled]
     */
    public $EnableMemShellScan;

    /**
     * @param integer $ScanPattern Scan mode: 0 - full disk scan; 1 - rapid scan
     * @param integer $HostType Server classification: 1: Professional Edition servers; 2: self-selected servers
     * @param array $QuuidList Effective for selected servers; a string array of host QUUIDs
     * @param integer $TimeoutPeriod Timeout unit: seconds, which is 3,600 seconds by default.
     * @param integer $EngineType 1 - standard mode (only critical and high-risk are reported.); 2 - enhanced mode (critical, high-risk, and medium-risk are reported.); 3 - strict mode (critical, high-risk, medium-risk, low-risk, and prompt are reported.)
     * @param integer $EnableMemShellScan Whether to enable malicious process killing [0: Not Enabled; 1: Enabled]
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("ScanPattern",$param) and $param["ScanPattern"] !== null) {
            $this->ScanPattern = $param["ScanPattern"];
        }

        if (array_key_exists("HostType",$param) and $param["HostType"] !== null) {
            $this->HostType = $param["HostType"];
        }

        if (array_key_exists("QuuidList",$param) and $param["QuuidList"] !== null) {
            $this->QuuidList = $param["QuuidList"];
        }

        if (array_key_exists("TimeoutPeriod",$param) and $param["TimeoutPeriod"] !== null) {
            $this->TimeoutPeriod = $param["TimeoutPeriod"];
        }

        if (array_key_exists("EngineType",$param) and $param["EngineType"] !== null) {
            $this->EngineType = $param["EngineType"];
        }

        if (array_key_exists("EnableMemShellScan",$param) and $param["EnableMemShellScan"] !== null) {
            $this->EnableMemShellScan = $param["EnableMemShellScan"];
        }
    }
}
