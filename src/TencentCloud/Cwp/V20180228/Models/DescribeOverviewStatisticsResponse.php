<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeOverviewStatistics response structure.
 *
 * @method integer getOnlineMachineNum() Obtain Number of servers online
 * @method void setOnlineMachineNum(integer $OnlineMachineNum) Set Number of servers online
 * @method integer getProVersionMachineNum() Obtain Number of professional servers
 * @method void setProVersionMachineNum(integer $ProVersionMachineNum) Set Number of professional servers
 * @method integer getMalwareNum() Obtain Number of Trojan files
 * @method void setMalwareNum(integer $MalwareNum) Set Number of Trojan files
 * @method integer getNonlocalLoginNum() Obtain Number of cross-region log-in
 * @method void setNonlocalLoginNum(integer $NonlocalLoginNum) Set Number of cross-region log-in
 * @method integer getBruteAttackSuccessNum() Obtain Number of successful brute force cracking
 * @method void setBruteAttackSuccessNum(integer $BruteAttackSuccessNum) Set Number of successful brute force cracking
 * @method integer getVulNum() Obtain Number of vulnerabilities
 * @method void setVulNum(integer $VulNum) Set Number of vulnerabilities
 * @method integer getBaseLineNum() Obtain Number of security baselines
 * @method void setBaseLineNum(integer $BaseLineNum) Set Number of security baselines
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeOverviewStatisticsResponse extends AbstractModel
{
    /**
     * @var integer Number of servers online
     */
    public $OnlineMachineNum;

    /**
     * @var integer Number of professional servers
     */
    public $ProVersionMachineNum;

    /**
     * @var integer Number of Trojan files
     */
    public $MalwareNum;

    /**
     * @var integer Number of cross-region log-in
     */
    public $NonlocalLoginNum;

    /**
     * @var integer Number of successful brute force cracking
     */
    public $BruteAttackSuccessNum;

    /**
     * @var integer Number of vulnerabilities
     */
    public $VulNum;

    /**
     * @var integer Number of security baselines
     */
    public $BaseLineNum;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $OnlineMachineNum Number of servers online
     * @param integer $ProVersionMachineNum Number of professional servers
     * @param integer $MalwareNum Number of Trojan files
     * @param integer $NonlocalLoginNum Number of cross-region log-in
     * @param integer $BruteAttackSuccessNum Number of successful brute force cracking
     * @param integer $VulNum Number of vulnerabilities
     * @param integer $BaseLineNum Number of security baselines
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("OnlineMachineNum",$param) and $param["OnlineMachineNum"] !== null) {
            $this->OnlineMachineNum = $param["OnlineMachineNum"];
        }

        if (array_key_exists("ProVersionMachineNum",$param) and $param["ProVersionMachineNum"] !== null) {
            $this->ProVersionMachineNum = $param["ProVersionMachineNum"];
        }

        if (array_key_exists("MalwareNum",$param) and $param["MalwareNum"] !== null) {
            $this->MalwareNum = $param["MalwareNum"];
        }

        if (array_key_exists("NonlocalLoginNum",$param) and $param["NonlocalLoginNum"] !== null) {
            $this->NonlocalLoginNum = $param["NonlocalLoginNum"];
        }

        if (array_key_exists("BruteAttackSuccessNum",$param) and $param["BruteAttackSuccessNum"] !== null) {
            $this->BruteAttackSuccessNum = $param["BruteAttackSuccessNum"];
        }

        if (array_key_exists("VulNum",$param) and $param["VulNum"] !== null) {
            $this->VulNum = $param["VulNum"];
        }

        if (array_key_exists("BaseLineNum",$param) and $param["BaseLineNum"] !== null) {
            $this->BaseLineNum = $param["BaseLineNum"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
