<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeLicenseWhiteConfig response structure.
 *
 * @method VersionWhiteConfig getFlagShip() Obtain Ultimate Edition configuration information
 * @method void setFlagShip(VersionWhiteConfig $FlagShip) Set Ultimate Edition configuration information
 * @method VersionWhiteConfig getProfessional() Obtain Pro Edition configuration information
 * @method void setProfessional(VersionWhiteConfig $Professional) Set Pro Edition configuration information
 * @method VersionWhiteConfig getPrattWhitney() Obtain Inclusive Edition configuration information
 * @method void setPrattWhitney(VersionWhiteConfig $PrattWhitney) Set Inclusive Edition configuration information
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeLicenseWhiteConfigResponse extends AbstractModel
{
    /**
     * @var VersionWhiteConfig Ultimate Edition configuration information
     */
    public $FlagShip;

    /**
     * @var VersionWhiteConfig Pro Edition configuration information
     */
    public $Professional;

    /**
     * @var VersionWhiteConfig Inclusive Edition configuration information
     */
    public $PrattWhitney;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param VersionWhiteConfig $FlagShip Ultimate Edition configuration information
     * @param VersionWhiteConfig $Professional Pro Edition configuration information
     * @param VersionWhiteConfig $PrattWhitney Inclusive Edition configuration information
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("FlagShip",$param) and $param["FlagShip"] !== null) {
            $this->FlagShip = new VersionWhiteConfig();
            $this->FlagShip->deserialize($param["FlagShip"]);
        }

        if (array_key_exists("Professional",$param) and $param["Professional"] !== null) {
            $this->Professional = new VersionWhiteConfig();
            $this->Professional->deserialize($param["Professional"]);
        }

        if (array_key_exists("PrattWhitney",$param) and $param["PrattWhitney"] !== null) {
            $this->PrattWhitney = new VersionWhiteConfig();
            $this->PrattWhitney->deserialize($param["PrattWhitney"]);
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
