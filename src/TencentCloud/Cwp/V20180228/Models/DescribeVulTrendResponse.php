<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cwp\V20180228\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeVulTrend response structure.
 *
 * @method integer getVulEventCount() Obtain Number of vulnerability exploitation attacks in the past six months
 * @method void setVulEventCount(integer $VulEventCount) Set Number of vulnerability exploitation attacks in the past six months
 * @method integer getIncreaseVulEventCount() Obtain Number of new vulnerability exploitation attacks in the past six months
 * @method void setIncreaseVulEventCount(integer $IncreaseVulEventCount) Set Number of new vulnerability exploitation attacks in the past six months
 * @method integer getHotVulCount() Obtain Notable vulnerabilities attacked in the past six months
 * @method void setHotVulCount(integer $HotVulCount) Set Notable vulnerabilities attacked in the past six months
 * @method integer getIncreaseHotVulCount() Obtain New notable vulnerabilities attacked in the past six months
 * @method void setIncreaseHotVulCount(integer $IncreaseHotVulCount) Set New notable vulnerabilities attacked in the past six months
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeVulTrendResponse extends AbstractModel
{
    /**
     * @var integer Number of vulnerability exploitation attacks in the past six months
     */
    public $VulEventCount;

    /**
     * @var integer Number of new vulnerability exploitation attacks in the past six months
     */
    public $IncreaseVulEventCount;

    /**
     * @var integer Notable vulnerabilities attacked in the past six months
     */
    public $HotVulCount;

    /**
     * @var integer New notable vulnerabilities attacked in the past six months
     */
    public $IncreaseHotVulCount;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $VulEventCount Number of vulnerability exploitation attacks in the past six months
     * @param integer $IncreaseVulEventCount Number of new vulnerability exploitation attacks in the past six months
     * @param integer $HotVulCount Notable vulnerabilities attacked in the past six months
     * @param integer $IncreaseHotVulCount New notable vulnerabilities attacked in the past six months
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("VulEventCount",$param) and $param["VulEventCount"] !== null) {
            $this->VulEventCount = $param["VulEventCount"];
        }

        if (array_key_exists("IncreaseVulEventCount",$param) and $param["IncreaseVulEventCount"] !== null) {
            $this->IncreaseVulEventCount = $param["IncreaseVulEventCount"];
        }

        if (array_key_exists("HotVulCount",$param) and $param["HotVulCount"] !== null) {
            $this->HotVulCount = $param["HotVulCount"];
        }

        if (array_key_exists("IncreaseHotVulCount",$param) and $param["IncreaseHotVulCount"] !== null) {
            $this->IncreaseHotVulCount = $param["IncreaseHotVulCount"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
