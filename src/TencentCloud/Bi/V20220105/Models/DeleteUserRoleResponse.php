<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Bi\V20220105\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DeleteUserRole response structure.
 *
 * @method ErrorInfo getErrorInfo() Obtain Custom error information object.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setErrorInfo(ErrorInfo $ErrorInfo) Set Custom error information object.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getExtra() Obtain Expansion.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setExtra(string $Extra) Set Expansion.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getData() Obtain Data.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setData(string $Data) Set Data.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getMsg() Obtain Message.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setMsg(string $Msg) Set Message.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DeleteUserRoleResponse extends AbstractModel
{
    /**
     * @var ErrorInfo Custom error information object.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $ErrorInfo;

    /**
     * @var string Expansion.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Extra;

    /**
     * @var string Data.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Data;

    /**
     * @var string Message.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Msg;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param ErrorInfo $ErrorInfo Custom error information object.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $Extra Expansion.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $Data Data.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $Msg Message.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("ErrorInfo",$param) and $param["ErrorInfo"] !== null) {
            $this->ErrorInfo = new ErrorInfo();
            $this->ErrorInfo->deserialize($param["ErrorInfo"]);
        }

        if (array_key_exists("Extra",$param) and $param["Extra"] !== null) {
            $this->Extra = $param["Extra"];
        }

        if (array_key_exists("Data",$param) and $param["Data"] !== null) {
            $this->Data = $param["Data"];
        }

        if (array_key_exists("Msg",$param) and $param["Msg"] !== null) {
            $this->Msg = $param["Msg"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
