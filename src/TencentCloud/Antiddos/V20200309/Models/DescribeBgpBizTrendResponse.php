<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Antiddos\V20200309\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeBgpBizTrend response structure.
 *
 * @method array getDataList() Obtain Values of the samples
 * @method void setDataList(array $DataList) Set Values of the samples
 * @method integer getTotal() Obtain Number of samples
 * @method void setTotal(integer $Total) Set Number of samples
 * @method string getMetricName() Obtain Statistical metric
 * @method void setMetricName(string $MetricName) Set Statistical metric
 * @method integer getMaxData() Obtain Maximum value of the arrays returned
 * @method void setMaxData(integer $MaxData) Set Maximum value of the arrays returned
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeBgpBizTrendResponse extends AbstractModel
{
    /**
     * @var array Values of the samples
     */
    public $DataList;

    /**
     * @var integer Number of samples
     */
    public $Total;

    /**
     * @var string Statistical metric
     */
    public $MetricName;

    /**
     * @var integer Maximum value of the arrays returned
     */
    public $MaxData;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $DataList Values of the samples
     * @param integer $Total Number of samples
     * @param string $MetricName Statistical metric
     * @param integer $MaxData Maximum value of the arrays returned
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("DataList",$param) and $param["DataList"] !== null) {
            $this->DataList = $param["DataList"];
        }

        if (array_key_exists("Total",$param) and $param["Total"] !== null) {
            $this->Total = $param["Total"];
        }

        if (array_key_exists("MetricName",$param) and $param["MetricName"] !== null) {
            $this->MetricName = $param["MetricName"];
        }

        if (array_key_exists("MaxData",$param) and $param["MaxData"] !== null) {
            $this->MaxData = $param["MaxData"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
