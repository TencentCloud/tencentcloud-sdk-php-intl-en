<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Vod\V20180717\Models;
use TencentCloud\Common\AbstractModel;

/**
 * The parameters of an audio/video remastering output file.
 *
 * @method string getMediaName() Obtain The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
 * @method void setMediaName(string $MediaName) Set The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
 * @method string getDescription() Obtain The description (up to 128 characters). If you do not specify this, the description will be empty.
 * @method void setDescription(string $Description) Set The description (up to 128 characters). If you do not specify this, the description will be empty.
 * @method integer getClassId() Obtain The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
<li>The default value is `0`, which means the “Other” category.</li>
 * @method void setClassId(integer $ClassId) Set The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
<li>The default value is `0`, which means the “Other” category.</li>
 * @method string getExpireTime() Obtain The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
 * @method void setExpireTime(string $ExpireTime) Set The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
 * @method string getContainer() Obtain The output container format. Valid values: `mp4` (default), `flv`, `hls`.
 * @method void setContainer(string $Container) Set The output container format. Valid values: `mp4` (default), `flv`, `hls`.
 * @method RebuildMediaTargetVideoStream getVideoStream() Obtain The output video parameters.
 * @method void setVideoStream(RebuildMediaTargetVideoStream $VideoStream) Set The output video parameters.
 * @method RebuildMediaTargetAudioStream getAudioStream() Obtain The output audio parameters.
 * @method void setAudioStream(RebuildMediaTargetAudioStream $AudioStream) Set The output audio parameters.
 * @method integer getRemoveVideo() Obtain Whether to remove video data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
 * @method void setRemoveVideo(integer $RemoveVideo) Set Whether to remove video data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
 * @method integer getRemoveAudio() Obtain Whether to remove audio data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
 * @method void setRemoveAudio(integer $RemoveAudio) Set Whether to remove audio data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
 */
class RebuildMediaTargetInfo extends AbstractModel
{
    /**
     * @var string The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
     */
    public $MediaName;

    /**
     * @var string The description (up to 128 characters). If you do not specify this, the description will be empty.
     */
    public $Description;

    /**
     * @var integer The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
<li>The default value is `0`, which means the “Other” category.</li>
     */
    public $ClassId;

    /**
     * @var string The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
     */
    public $ExpireTime;

    /**
     * @var string The output container format. Valid values: `mp4` (default), `flv`, `hls`.
     */
    public $Container;

    /**
     * @var RebuildMediaTargetVideoStream The output video parameters.
     */
    public $VideoStream;

    /**
     * @var RebuildMediaTargetAudioStream The output audio parameters.
     */
    public $AudioStream;

    /**
     * @var integer Whether to remove video data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
     */
    public $RemoveVideo;

    /**
     * @var integer Whether to remove audio data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
     */
    public $RemoveAudio;

    /**
     * @param string $MediaName The filename. This parameter can contain up to 64 characters, and will be generated by the system if it is left empty.
     * @param string $Description The description (up to 128 characters). If you do not specify this, the description will be empty.
     * @param integer $ClassId The ID of the file’s category. You can use the [CreateClass](https://intl.cloud.tencent.com/document/product/266/7812?from_cn_redirect=1) API to create a category and get the category ID.
<li>The default value is `0`, which means the “Other” category.</li>
     * @param string $ExpireTime The expiration time of the output file, in [ISO date format](https://intl.cloud.tencent.com/document/product/266/11732?lang=en&pg=). The file will be deleted after the specified expiration time. By default, the file will never expire.
     * @param string $Container The output container format. Valid values: `mp4` (default), `flv`, `hls`.
     * @param RebuildMediaTargetVideoStream $VideoStream The output video parameters.
     * @param RebuildMediaTargetAudioStream $AudioStream The output audio parameters.
     * @param integer $RemoveVideo Whether to remove video data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
     * @param integer $RemoveAudio Whether to remove audio data. Valid values:
<li>`0`: No</li>
<li>`1`: Yes</li>

Default value: `0`.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("MediaName",$param) and $param["MediaName"] !== null) {
            $this->MediaName = $param["MediaName"];
        }

        if (array_key_exists("Description",$param) and $param["Description"] !== null) {
            $this->Description = $param["Description"];
        }

        if (array_key_exists("ClassId",$param) and $param["ClassId"] !== null) {
            $this->ClassId = $param["ClassId"];
        }

        if (array_key_exists("ExpireTime",$param) and $param["ExpireTime"] !== null) {
            $this->ExpireTime = $param["ExpireTime"];
        }

        if (array_key_exists("Container",$param) and $param["Container"] !== null) {
            $this->Container = $param["Container"];
        }

        if (array_key_exists("VideoStream",$param) and $param["VideoStream"] !== null) {
            $this->VideoStream = new RebuildMediaTargetVideoStream();
            $this->VideoStream->deserialize($param["VideoStream"]);
        }

        if (array_key_exists("AudioStream",$param) and $param["AudioStream"] !== null) {
            $this->AudioStream = new RebuildMediaTargetAudioStream();
            $this->AudioStream->deserialize($param["AudioStream"]);
        }

        if (array_key_exists("RemoveVideo",$param) and $param["RemoveVideo"] !== null) {
            $this->RemoveVideo = $param["RemoveVideo"];
        }

        if (array_key_exists("RemoveAudio",$param) and $param["RemoveAudio"] !== null) {
            $this->RemoveAudio = $param["RemoveAudio"];
        }
    }
}
