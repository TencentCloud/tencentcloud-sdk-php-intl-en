<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Tke\V20180525\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeAvailableTKEEdgeVersion response structure.
 *
 * @method array getVersions() Obtain Version list
 * @method void setVersions(array $Versions) Set Version list
 * @method string getEdgeVersionLatest() Obtain Latest version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method void setEdgeVersionLatest(string $EdgeVersionLatest) Set Latest version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method string getEdgeVersionCurrent() Obtain Current version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method void setEdgeVersionCurrent(string $EdgeVersionCurrent) Set Current version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeAvailableTKEEdgeVersionResponse extends AbstractModel
{
    /**
     * @var array Version list
     */
    public $Versions;

    /**
     * @var string Latest version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
     */
    public $EdgeVersionLatest;

    /**
     * @var string Current version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
     */
    public $EdgeVersionCurrent;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $Versions Version list
     * @param string $EdgeVersionLatest Latest version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
     * @param string $EdgeVersionCurrent Current version of the edge cluster
Note: This field may return `null`, indicating that no valid value can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Versions",$param) and $param["Versions"] !== null) {
            $this->Versions = $param["Versions"];
        }

        if (array_key_exists("EdgeVersionLatest",$param) and $param["EdgeVersionLatest"] !== null) {
            $this->EdgeVersionLatest = $param["EdgeVersionLatest"];
        }

        if (array_key_exists("EdgeVersionCurrent",$param) and $param["EdgeVersionCurrent"] !== null) {
            $this->EdgeVersionCurrent = $param["EdgeVersionCurrent"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
