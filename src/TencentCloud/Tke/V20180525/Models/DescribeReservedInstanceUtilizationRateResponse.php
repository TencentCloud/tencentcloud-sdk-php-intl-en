<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Tke\V20180525\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeReservedInstanceUtilizationRate response structure.
 *
 * @method array getUtilizationRateSet() Obtain Usage Rate of Reserved Coupons 
 * @method void setUtilizationRateSet(array $UtilizationRateSet) Set Usage Rate of Reserved Coupons 
 * @method integer getPodNum() Obtain Total number of pay-as-you-go Pods
 * @method void setPodNum(integer $PodNum) Set Total number of pay-as-you-go Pods
 * @method float getPodRate() Obtain  Pod Deduction Rate by Reserved Coupons
 * @method void setPodRate(float $PodRate) Set  Pod Deduction Rate by Reserved Coupons
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeReservedInstanceUtilizationRateResponse extends AbstractModel
{
    /**
     * @var array Usage Rate of Reserved Coupons 
     */
    public $UtilizationRateSet;

    /**
     * @var integer Total number of pay-as-you-go Pods
     */
    public $PodNum;

    /**
     * @var float  Pod Deduction Rate by Reserved Coupons
     */
    public $PodRate;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $UtilizationRateSet Usage Rate of Reserved Coupons 
     * @param integer $PodNum Total number of pay-as-you-go Pods
     * @param float $PodRate  Pod Deduction Rate by Reserved Coupons
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("UtilizationRateSet",$param) and $param["UtilizationRateSet"] !== null) {
            $this->UtilizationRateSet = [];
            foreach ($param["UtilizationRateSet"] as $key => $value){
                $obj = new ReservedInstanceUtilizationRate();
                $obj->deserialize($value);
                array_push($this->UtilizationRateSet, $obj);
            }
        }

        if (array_key_exists("PodNum",$param) and $param["PodNum"] !== null) {
            $this->PodNum = $param["PodNum"];
        }

        if (array_key_exists("PodRate",$param) and $param["PodRate"] !== null) {
            $this->PodRate = $param["PodRate"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
