<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Billing\V20180709\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeGatherRuleDetail response structure.
 *
 * @method integer getId() Obtain Specifies the collection rule ID.
 * @method void setId(integer $Id) Set Specifies the collection rule ID.
 * @method string getUin() Obtain Associated UIN of the collection rule.
 * @method void setUin(string $Uin) Set Associated UIN of the collection rule.
 * @method string getUpdateTime() Obtain Collection rule last update time.
 * @method void setUpdateTime(string $UpdateTime) Set Collection rule last update time.
 * @method AllocationRuleExpression getRuleDetail() Obtain Collection rule details.
 * @method void setRuleDetail(AllocationRuleExpression $RuleDetail) Set Collection rule details.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeGatherRuleDetailResponse extends AbstractModel
{
    /**
     * @var integer Specifies the collection rule ID.
     */
    public $Id;

    /**
     * @var string Associated UIN of the collection rule.
     */
    public $Uin;

    /**
     * @var string Collection rule last update time.
     */
    public $UpdateTime;

    /**
     * @var AllocationRuleExpression Collection rule details.
     */
    public $RuleDetail;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Id Specifies the collection rule ID.
     * @param string $Uin Associated UIN of the collection rule.
     * @param string $UpdateTime Collection rule last update time.
     * @param AllocationRuleExpression $RuleDetail Collection rule details.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Id",$param) and $param["Id"] !== null) {
            $this->Id = $param["Id"];
        }

        if (array_key_exists("Uin",$param) and $param["Uin"] !== null) {
            $this->Uin = $param["Uin"];
        }

        if (array_key_exists("UpdateTime",$param) and $param["UpdateTime"] !== null) {
            $this->UpdateTime = $param["UpdateTime"];
        }

        if (array_key_exists("RuleDetail",$param) and $param["RuleDetail"] !== null) {
            $this->RuleDetail = new AllocationRuleExpression();
            $this->RuleDetail->deserialize($param["RuleDetail"]);
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
