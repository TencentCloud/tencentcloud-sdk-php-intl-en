<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Cdc\V20201214\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeDedicatedClusterOverview response structure.
 *
 * @method integer getCvmCount() Obtain Number of CVMs
 * @method void setCvmCount(integer $CvmCount) Set Number of CVMs
 * @method integer getHostCount() Obtain Number of hosts
 * @method void setHostCount(integer $HostCount) Set Number of hosts
 * @method string getVpnConnectionState() Obtain VPN channel status 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method void setVpnConnectionState(string $VpnConnectionState) Set VPN channel status 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method VpngwBandwidthData getVpngwBandwidthData() Obtain VPN gateway monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method void setVpngwBandwidthData(VpngwBandwidthData $VpngwBandwidthData) Set VPN gateway monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method LocalNetInfo getLocalNetInfo() Obtain Local gateway information 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method void setLocalNetInfo(LocalNetInfo $LocalNetInfo) Set Local gateway information 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method array getVpnConnectionBandwidthData() Obtain VPN gateway channel monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method void setVpnConnectionBandwidthData(array $VpnConnectionBandwidthData) Set VPN gateway channel monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
 * @method array getHostDetailInfo() Obtain 
 * @method void setHostDetailInfo(array $HostDetailInfo) Set 
 * @method integer getHostStandbyCount() Obtain 
 * @method void setHostStandbyCount(integer $HostStandbyCount) Set 
 * @method integer getHostNormalCount() Obtain 
 * @method void setHostNormalCount(integer $HostNormalCount) Set 
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeDedicatedClusterOverviewResponse extends AbstractModel
{
    /**
     * @var integer Number of CVMs
     */
    public $CvmCount;

    /**
     * @var integer Number of hosts
     */
    public $HostCount;

    /**
     * @var string VPN channel status 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     */
    public $VpnConnectionState;

    /**
     * @var VpngwBandwidthData VPN gateway monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     */
    public $VpngwBandwidthData;

    /**
     * @var LocalNetInfo Local gateway information 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     */
    public $LocalNetInfo;

    /**
     * @var array VPN gateway channel monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     */
    public $VpnConnectionBandwidthData;

    /**
     * @var array 
     */
    public $HostDetailInfo;

    /**
     * @var integer 
     */
    public $HostStandbyCount;

    /**
     * @var integer 
     */
    public $HostNormalCount;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $CvmCount Number of CVMs
     * @param integer $HostCount Number of hosts
     * @param string $VpnConnectionState VPN channel status 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     * @param VpngwBandwidthData $VpngwBandwidthData VPN gateway monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     * @param LocalNetInfo $LocalNetInfo Local gateway information 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     * @param array $VpnConnectionBandwidthData VPN gateway channel monitoring data 
Note: The returned value of this field may be null, indicating that no valid value is obtained.
     * @param array $HostDetailInfo 
     * @param integer $HostStandbyCount 
     * @param integer $HostNormalCount 
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("CvmCount",$param) and $param["CvmCount"] !== null) {
            $this->CvmCount = $param["CvmCount"];
        }

        if (array_key_exists("HostCount",$param) and $param["HostCount"] !== null) {
            $this->HostCount = $param["HostCount"];
        }

        if (array_key_exists("VpnConnectionState",$param) and $param["VpnConnectionState"] !== null) {
            $this->VpnConnectionState = $param["VpnConnectionState"];
        }

        if (array_key_exists("VpngwBandwidthData",$param) and $param["VpngwBandwidthData"] !== null) {
            $this->VpngwBandwidthData = new VpngwBandwidthData();
            $this->VpngwBandwidthData->deserialize($param["VpngwBandwidthData"]);
        }

        if (array_key_exists("LocalNetInfo",$param) and $param["LocalNetInfo"] !== null) {
            $this->LocalNetInfo = new LocalNetInfo();
            $this->LocalNetInfo->deserialize($param["LocalNetInfo"]);
        }

        if (array_key_exists("VpnConnectionBandwidthData",$param) and $param["VpnConnectionBandwidthData"] !== null) {
            $this->VpnConnectionBandwidthData = [];
            foreach ($param["VpnConnectionBandwidthData"] as $key => $value){
                $obj = new VpngwBandwidthData();
                $obj->deserialize($value);
                array_push($this->VpnConnectionBandwidthData, $obj);
            }
        }

        if (array_key_exists("HostDetailInfo",$param) and $param["HostDetailInfo"] !== null) {
            $this->HostDetailInfo = [];
            foreach ($param["HostDetailInfo"] as $key => $value){
                $obj = new HostDetailInfo();
                $obj->deserialize($value);
                array_push($this->HostDetailInfo, $obj);
            }
        }

        if (array_key_exists("HostStandbyCount",$param) and $param["HostStandbyCount"] !== null) {
            $this->HostStandbyCount = $param["HostStandbyCount"];
        }

        if (array_key_exists("HostNormalCount",$param) and $param["HostNormalCount"] !== null) {
            $this->HostNormalCount = $param["HostNormalCount"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
