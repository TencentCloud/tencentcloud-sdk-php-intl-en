<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Facefusion\V20220927\Models;
use TencentCloud\Common\AbstractModel;

/**
 * QueryVideoFaceFusionJob response structure.
 *
 * @method string getJobStatus() Obtain Current task status: queuing, processing, processing failed, or processing completed
 * @method void setJobStatus(string $JobStatus) Set Current task status: queuing, processing, processing failed, or processing completed
 * @method VideoFaceFusionOutput getVideoFaceFusionOutput() Obtain Video face fusion result
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setVideoFaceFusionOutput(VideoFaceFusionOutput $VideoFaceFusionOutput) Set Video face fusion result
Note: This field may return null, indicating that no valid values can be obtained.
 * @method integer getJobStatusCode() Obtain Task status code. 1: queuing; 3: processing; 5: processing failed; 7: processing completed.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setJobStatusCode(integer $JobStatusCode) Set Task status code. 1: queuing; 3: processing; 5: processing failed; 7: processing completed.
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getJobErrorCode() Obtain Task failure error code
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setJobErrorCode(string $JobErrorCode) Set Task failure error code
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getJobErrorMsg() Obtain Task failure error message
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setJobErrorMsg(string $JobErrorMsg) Set Task failure error message
Note: This field may return null, indicating that no valid values can be obtained.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class QueryVideoFaceFusionJobResponse extends AbstractModel
{
    /**
     * @var string Current task status: queuing, processing, processing failed, or processing completed
     */
    public $JobStatus;

    /**
     * @var VideoFaceFusionOutput Video face fusion result
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $VideoFaceFusionOutput;

    /**
     * @var integer Task status code. 1: queuing; 3: processing; 5: processing failed; 7: processing completed.
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $JobStatusCode;

    /**
     * @var string Task failure error code
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $JobErrorCode;

    /**
     * @var string Task failure error message
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $JobErrorMsg;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $JobStatus Current task status: queuing, processing, processing failed, or processing completed
     * @param VideoFaceFusionOutput $VideoFaceFusionOutput Video face fusion result
Note: This field may return null, indicating that no valid values can be obtained.
     * @param integer $JobStatusCode Task status code. 1: queuing; 3: processing; 5: processing failed; 7: processing completed.
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $JobErrorCode Task failure error code
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $JobErrorMsg Task failure error message
Note: This field may return null, indicating that no valid values can be obtained.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("JobStatus",$param) and $param["JobStatus"] !== null) {
            $this->JobStatus = $param["JobStatus"];
        }

        if (array_key_exists("VideoFaceFusionOutput",$param) and $param["VideoFaceFusionOutput"] !== null) {
            $this->VideoFaceFusionOutput = new VideoFaceFusionOutput();
            $this->VideoFaceFusionOutput->deserialize($param["VideoFaceFusionOutput"]);
        }

        if (array_key_exists("JobStatusCode",$param) and $param["JobStatusCode"] !== null) {
            $this->JobStatusCode = $param["JobStatusCode"];
        }

        if (array_key_exists("JobErrorCode",$param) and $param["JobErrorCode"] !== null) {
            $this->JobErrorCode = $param["JobErrorCode"];
        }

        if (array_key_exists("JobErrorMsg",$param) and $param["JobErrorMsg"] !== null) {
            $this->JobErrorMsg = $param["JobErrorMsg"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
