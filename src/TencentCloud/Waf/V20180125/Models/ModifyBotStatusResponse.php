<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Waf\V20180125\Models;
use TencentCloud\Common\AbstractModel;

/**
 * ModifyBotStatus response structure.
 *
 * @method string getData() Obtain Normally null

Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setData(string $Data) Set Normally null

Note: This field may return null, indicating that no valid values can be obtained.
 * @method array getUnSupportedList() Obtain List of domain names for which no bots are purchased
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setUnSupportedList(array $UnSupportedList) Set List of domain names for which no bots are purchased
Note: This field may return null, indicating that no valid values can be obtained.
 * @method array getFailDomainList() Obtain List of domain names which bots are purchased but the operation fails
Note: This field may return null, indicating that no valid values can be obtained.
 * @method void setFailDomainList(array $FailDomainList) Set List of domain names which bots are purchased but the operation fails
Note: This field may return null, indicating that no valid values can be obtained.
 * @method integer getCount() Obtain Number of successes
 * @method void setCount(integer $Count) Set Number of successes
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class ModifyBotStatusResponse extends AbstractModel
{
    /**
     * @var string Normally null

Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $Data;

    /**
     * @var array List of domain names for which no bots are purchased
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $UnSupportedList;

    /**
     * @var array List of domain names which bots are purchased but the operation fails
Note: This field may return null, indicating that no valid values can be obtained.
     */
    public $FailDomainList;

    /**
     * @var integer Number of successes
     */
    public $Count;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $Data Normally null

Note: This field may return null, indicating that no valid values can be obtained.
     * @param array $UnSupportedList List of domain names for which no bots are purchased
Note: This field may return null, indicating that no valid values can be obtained.
     * @param array $FailDomainList List of domain names which bots are purchased but the operation fails
Note: This field may return null, indicating that no valid values can be obtained.
     * @param integer $Count Number of successes
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Data",$param) and $param["Data"] !== null) {
            $this->Data = $param["Data"];
        }

        if (array_key_exists("UnSupportedList",$param) and $param["UnSupportedList"] !== null) {
            $this->UnSupportedList = $param["UnSupportedList"];
        }

        if (array_key_exists("FailDomainList",$param) and $param["FailDomainList"] !== null) {
            $this->FailDomainList = $param["FailDomainList"];
        }

        if (array_key_exists("Count",$param) and $param["Count"] !== null) {
            $this->Count = $param["Count"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
