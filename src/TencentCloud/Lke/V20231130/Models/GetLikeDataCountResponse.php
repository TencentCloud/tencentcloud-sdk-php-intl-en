<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * GetLikeDataCount response structure.
 *
 * @method integer getTotal() Obtain Number of messages that can be evaluated.
 * @method void setTotal(integer $Total) Set Number of messages that can be evaluated.
 * @method integer getAppraisalTotal() Obtain Number of comments.
 * @method void setAppraisalTotal(integer $AppraisalTotal) Set Number of comments.
 * @method float getParticipationRate() Obtain Participation rate.
 * @method void setParticipationRate(float $ParticipationRate) Set Participation rate.
 * @method integer getLikeTotal() Obtain Number of likes.
 * @method void setLikeTotal(integer $LikeTotal) Set Number of likes.
 * @method float getLikeRate() Obtain Like rate.
 * @method void setLikeRate(float $LikeRate) Set Like rate.
 * @method integer getDislikeTotal() Obtain Number of dislikes.
 * @method void setDislikeTotal(integer $DislikeTotal) Set Number of dislikes.
 * @method float getDislikeRate() Obtain Dislike rate.
 * @method void setDislikeRate(float $DislikeRate) Set Dislike rate.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class GetLikeDataCountResponse extends AbstractModel
{
    /**
     * @var integer Number of messages that can be evaluated.
     */
    public $Total;

    /**
     * @var integer Number of comments.
     */
    public $AppraisalTotal;

    /**
     * @var float Participation rate.
     */
    public $ParticipationRate;

    /**
     * @var integer Number of likes.
     */
    public $LikeTotal;

    /**
     * @var float Like rate.
     */
    public $LikeRate;

    /**
     * @var integer Number of dislikes.
     */
    public $DislikeTotal;

    /**
     * @var float Dislike rate.
     */
    public $DislikeRate;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param integer $Total Number of messages that can be evaluated.
     * @param integer $AppraisalTotal Number of comments.
     * @param float $ParticipationRate Participation rate.
     * @param integer $LikeTotal Number of likes.
     * @param float $LikeRate Like rate.
     * @param integer $DislikeTotal Number of dislikes.
     * @param float $DislikeRate Dislike rate.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Total",$param) and $param["Total"] !== null) {
            $this->Total = $param["Total"];
        }

        if (array_key_exists("AppraisalTotal",$param) and $param["AppraisalTotal"] !== null) {
            $this->AppraisalTotal = $param["AppraisalTotal"];
        }

        if (array_key_exists("ParticipationRate",$param) and $param["ParticipationRate"] !== null) {
            $this->ParticipationRate = $param["ParticipationRate"];
        }

        if (array_key_exists("LikeTotal",$param) and $param["LikeTotal"] !== null) {
            $this->LikeTotal = $param["LikeTotal"];
        }

        if (array_key_exists("LikeRate",$param) and $param["LikeRate"] !== null) {
            $this->LikeRate = $param["LikeRate"];
        }

        if (array_key_exists("DislikeTotal",$param) and $param["DislikeTotal"] !== null) {
            $this->DislikeTotal = $param["DislikeTotal"];
        }

        if (array_key_exists("DislikeRate",$param) and $param["DislikeRate"] !== null) {
            $this->DislikeRate = $param["DislikeRate"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
