<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeKnowledgeUsage response structure.
 *
 * @method string getAvailableCharSize() Obtain The upper limit of available characters.
 * @method void setAvailableCharSize(string $AvailableCharSize) Set The upper limit of available characters.
 * @method string getExceedCharSize() Obtain Number of characters exceeding the capacity limit of available characters.
 * @method void setExceedCharSize(string $ExceedCharSize) Set Number of characters exceeding the capacity limit of available characters.
 * @method string getUsedCharSize() Obtain Total number of characters used in the knowledge library.
 * @method void setUsedCharSize(string $UsedCharSize) Set Total number of characters used in the knowledge library.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeKnowledgeUsageResponse extends AbstractModel
{
    /**
     * @var string The upper limit of available characters.
     */
    public $AvailableCharSize;

    /**
     * @var string Number of characters exceeding the capacity limit of available characters.
     */
    public $ExceedCharSize;

    /**
     * @var string Total number of characters used in the knowledge library.
     */
    public $UsedCharSize;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $AvailableCharSize The upper limit of available characters.
     * @param string $ExceedCharSize Number of characters exceeding the capacity limit of available characters.
     * @param string $UsedCharSize Total number of characters used in the knowledge library.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("AvailableCharSize",$param) and $param["AvailableCharSize"] !== null) {
            $this->AvailableCharSize = $param["AvailableCharSize"];
        }

        if (array_key_exists("ExceedCharSize",$param) and $param["ExceedCharSize"] !== null) {
            $this->ExceedCharSize = $param["ExceedCharSize"];
        }

        if (array_key_exists("UsedCharSize",$param) and $param["UsedCharSize"] !== null) {
            $this->UsedCharSize = $param["UsedCharSize"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
