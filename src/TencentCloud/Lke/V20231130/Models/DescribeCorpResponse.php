<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeCorp response structure.
 *
 * @method string getCorpBizId() Obtain Corporate ID.

 * @method void setCorpBizId(string $CorpBizId) Set Corporate ID.

 * @method integer getRobotQuota() Obtain Application quota.
 * @method void setRobotQuota(integer $RobotQuota) Set Application quota.
 * @method string getFullName() Obtain Full name of the corporate.

 * @method void setFullName(string $FullName) Set Full name of the corporate.

 * @method boolean getIsTrial() Obtain Whether to try out.
 * @method void setIsTrial(boolean $IsTrial) Set Whether to try out.
 * @method boolean getIsTrialExpired() Obtain Whether the trial has expired.
 * @method void setIsTrialExpired(boolean $IsTrialExpired) Set Whether the trial has expired.
 * @method integer getAvailableAppQuota() Obtain Quantity of available applications.
 * @method void setAvailableAppQuota(integer $AvailableAppQuota) Set Quantity of available applications.
 * @method boolean getIsSupportCustomModel() Obtain Whether custom model configuration is supported.
 * @method void setIsSupportCustomModel(boolean $IsSupportCustomModel) Set Whether custom model configuration is supported.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeCorpResponse extends AbstractModel
{
    /**
     * @var string Corporate ID.

     */
    public $CorpBizId;

    /**
     * @var integer Application quota.
     */
    public $RobotQuota;

    /**
     * @var string Full name of the corporate.

     */
    public $FullName;

    /**
     * @var boolean Whether to try out.
     */
    public $IsTrial;

    /**
     * @var boolean Whether the trial has expired.
     */
    public $IsTrialExpired;

    /**
     * @var integer Quantity of available applications.
     */
    public $AvailableAppQuota;

    /**
     * @var boolean Whether custom model configuration is supported.
     */
    public $IsSupportCustomModel;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $CorpBizId Corporate ID.

     * @param integer $RobotQuota Application quota.
     * @param string $FullName Full name of the corporate.

     * @param boolean $IsTrial Whether to try out.
     * @param boolean $IsTrialExpired Whether the trial has expired.
     * @param integer $AvailableAppQuota Quantity of available applications.
     * @param boolean $IsSupportCustomModel Whether custom model configuration is supported.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("CorpBizId",$param) and $param["CorpBizId"] !== null) {
            $this->CorpBizId = $param["CorpBizId"];
        }

        if (array_key_exists("RobotQuota",$param) and $param["RobotQuota"] !== null) {
            $this->RobotQuota = $param["RobotQuota"];
        }

        if (array_key_exists("FullName",$param) and $param["FullName"] !== null) {
            $this->FullName = $param["FullName"];
        }

        if (array_key_exists("IsTrial",$param) and $param["IsTrial"] !== null) {
            $this->IsTrial = $param["IsTrial"];
        }

        if (array_key_exists("IsTrialExpired",$param) and $param["IsTrialExpired"] !== null) {
            $this->IsTrialExpired = $param["IsTrialExpired"];
        }

        if (array_key_exists("AvailableAppQuota",$param) and $param["AvailableAppQuota"] !== null) {
            $this->AvailableAppQuota = $param["AvailableAppQuota"];
        }

        if (array_key_exists("IsSupportCustomModel",$param) and $param["IsSupportCustomModel"] !== null) {
            $this->IsSupportCustomModel = $param["IsSupportCustomModel"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
