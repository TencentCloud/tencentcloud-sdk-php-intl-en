<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeConcurrencyUsageGraph response structure.
 *
 * @method array getX() Obtain X-axis: time zone; returns two interval ranges of "minute/hour/day" according to the granularity of query conditions.
 * @method void setX(array $X) Set X-axis: time zone; returns two interval ranges of "minute/hour/day" according to the granularity of query conditions.
 * @method array getAvailableY() Obtain Available concurrent Y-axis coordinate.
 * @method void setAvailableY(array $AvailableY) Set Available concurrent Y-axis coordinate.
 * @method array getSuccessCallY() Obtain Succeeded to call the concurrent Y-axis coordinate.
 * @method void setSuccessCallY(array $SuccessCallY) Set Succeeded to call the concurrent Y-axis coordinate.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeConcurrencyUsageGraphResponse extends AbstractModel
{
    /**
     * @var array X-axis: time zone; returns two interval ranges of "minute/hour/day" according to the granularity of query conditions.
     */
    public $X;

    /**
     * @var array Available concurrent Y-axis coordinate.
     */
    public $AvailableY;

    /**
     * @var array Succeeded to call the concurrent Y-axis coordinate.
     */
    public $SuccessCallY;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param array $X X-axis: time zone; returns two interval ranges of "minute/hour/day" according to the granularity of query conditions.
     * @param array $AvailableY Available concurrent Y-axis coordinate.
     * @param array $SuccessCallY Succeeded to call the concurrent Y-axis coordinate.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("X",$param) and $param["X"] !== null) {
            $this->X = $param["X"];
        }

        if (array_key_exists("AvailableY",$param) and $param["AvailableY"] !== null) {
            $this->AvailableY = $param["AvailableY"];
        }

        if (array_key_exists("SuccessCallY",$param) and $param["SuccessCallY"] !== null) {
            $this->SuccessCallY = $param["SuccessCallY"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
