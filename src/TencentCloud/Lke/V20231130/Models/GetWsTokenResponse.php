<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * GetWsToken response structure.
 *
 * @method string getToken() Obtain Token value (valid for 60 seconds, valid only once, multiple validations will report an error).
 * @method void setToken(string $Token) Set Token value (valid for 60 seconds, valid only once, multiple validations will report an error).
 * @method float getBalance() Obtain Balance. The balance is valid if it is greater than 0.
 * @method void setBalance(float $Balance) Set Balance. The balance is valid if it is greater than 0.
 * @method integer getInputLenLimit() Obtain The character limit for input in the chat window.
 * @method void setInputLenLimit(integer $InputLenLimit) Set The character limit for input in the chat window.
 * @method string getPattern() Obtain Application mode: standard; agent; single_workflow.
 * @method void setPattern(string $Pattern) Set Application mode: standard; agent; single_workflow.
 * @method KnowledgeQaSingleWorkflow getSingleWorkflow() Obtain SingleWorkflow.
 * @method void setSingleWorkflow(KnowledgeQaSingleWorkflow $SingleWorkflow) Set SingleWorkflow.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class GetWsTokenResponse extends AbstractModel
{
    /**
     * @var string Token value (valid for 60 seconds, valid only once, multiple validations will report an error).
     */
    public $Token;

    /**
     * @var float Balance. The balance is valid if it is greater than 0.
     */
    public $Balance;

    /**
     * @var integer The character limit for input in the chat window.
     */
    public $InputLenLimit;

    /**
     * @var string Application mode: standard; agent; single_workflow.
     */
    public $Pattern;

    /**
     * @var KnowledgeQaSingleWorkflow SingleWorkflow.
     */
    public $SingleWorkflow;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $Token Token value (valid for 60 seconds, valid only once, multiple validations will report an error).
     * @param float $Balance Balance. The balance is valid if it is greater than 0.
     * @param integer $InputLenLimit The character limit for input in the chat window.
     * @param string $Pattern Application mode: standard; agent; single_workflow.
     * @param KnowledgeQaSingleWorkflow $SingleWorkflow SingleWorkflow.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("Token",$param) and $param["Token"] !== null) {
            $this->Token = $param["Token"];
        }

        if (array_key_exists("Balance",$param) and $param["Balance"] !== null) {
            $this->Balance = $param["Balance"];
        }

        if (array_key_exists("InputLenLimit",$param) and $param["InputLenLimit"] !== null) {
            $this->InputLenLimit = $param["InputLenLimit"];
        }

        if (array_key_exists("Pattern",$param) and $param["Pattern"] !== null) {
            $this->Pattern = $param["Pattern"];
        }

        if (array_key_exists("SingleWorkflow",$param) and $param["SingleWorkflow"] !== null) {
            $this->SingleWorkflow = new KnowledgeQaSingleWorkflow();
            $this->SingleWorkflow->deserialize($param["SingleWorkflow"]);
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
