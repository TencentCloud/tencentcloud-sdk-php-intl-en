<?php
/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace TencentCloud\Lke\V20231130\Models;
use TencentCloud\Common\AbstractModel;

/**
 * DescribeApp response structure.
 *
 * @method string getAppBizId() Obtain Application ID.
 * @method void setAppBizId(string $AppBizId) Set Application ID.
 * @method string getAppType() Obtain Application type; knowledge_qa - knowledge Q&A management; summary - knowledge summary; classifys - knowledge label extraction.
 * @method void setAppType(string $AppType) Set Application type; knowledge_qa - knowledge Q&A management; summary - knowledge summary; classifys - knowledge label extraction.
 * @method string getAppTypeDesc() Obtain Application type description.
 * @method void setAppTypeDesc(string $AppTypeDesc) Set Application type description.
 * @method BaseConfig getBaseConfig() Obtain Application type description.
 * @method void setBaseConfig(BaseConfig $BaseConfig) Set Application type description.
 * @method AppConfig getAppConfig() Obtain Application configuration.
 * @method void setAppConfig(AppConfig $AppConfig) Set Application configuration.
 * @method boolean getAvatarInAppeal() Obtain Whether the avatar is under appeal.
 * @method void setAvatarInAppeal(boolean $AvatarInAppeal) Set Whether the avatar is under appeal.
 * @method boolean getRoleInAppeal() Obtain Whether the role description is under appeal.
 * @method void setRoleInAppeal(boolean $RoleInAppeal) Set Whether the role description is under appeal.
 * @method boolean getNameInAppeal() Obtain Whether the name is under appeal.
 * @method void setNameInAppeal(boolean $NameInAppeal) Set Whether the name is under appeal.
 * @method boolean getGreetingInAppeal() Obtain Whether the welcome words are under appeal.
 * @method void setGreetingInAppeal(boolean $GreetingInAppeal) Set Whether the welcome words are under appeal.
 * @method boolean getBareAnswerInAppeal() Obtain Whether the response message for unknown questions is under appeal.
 * @method void setBareAnswerInAppeal(boolean $BareAnswerInAppeal) Set Whether the response message for unknown questions is under appeal.
 * @method string getAppKey() Obtain App key of the application.
 * @method void setAppKey(string $AppKey) Set App key of the application.
 * @method integer getAppStatus() Obtain Application status. 1: offline; 2: running; 3: disabled.
 * @method void setAppStatus(integer $AppStatus) Set Application status. 1: offline; 2: running; 3: disabled.
 * @method string getAppStatusDesc() Obtain Status description.
 * @method void setAppStatusDesc(string $AppStatusDesc) Set Status description.
 * @method string getRequestId() Obtain The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 * @method void setRequestId(string $RequestId) Set The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
 */
class DescribeAppResponse extends AbstractModel
{
    /**
     * @var string Application ID.
     */
    public $AppBizId;

    /**
     * @var string Application type; knowledge_qa - knowledge Q&A management; summary - knowledge summary; classifys - knowledge label extraction.
     */
    public $AppType;

    /**
     * @var string Application type description.
     */
    public $AppTypeDesc;

    /**
     * @var BaseConfig Application type description.
     */
    public $BaseConfig;

    /**
     * @var AppConfig Application configuration.
     */
    public $AppConfig;

    /**
     * @var boolean Whether the avatar is under appeal.
     */
    public $AvatarInAppeal;

    /**
     * @var boolean Whether the role description is under appeal.
     */
    public $RoleInAppeal;

    /**
     * @var boolean Whether the name is under appeal.
     */
    public $NameInAppeal;

    /**
     * @var boolean Whether the welcome words are under appeal.
     */
    public $GreetingInAppeal;

    /**
     * @var boolean Whether the response message for unknown questions is under appeal.
     */
    public $BareAnswerInAppeal;

    /**
     * @var string App key of the application.
     */
    public $AppKey;

    /**
     * @var integer Application status. 1: offline; 2: running; 3: disabled.
     */
    public $AppStatus;

    /**
     * @var string Status description.
     */
    public $AppStatusDesc;

    /**
     * @var string The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    public $RequestId;

    /**
     * @param string $AppBizId Application ID.
     * @param string $AppType Application type; knowledge_qa - knowledge Q&A management; summary - knowledge summary; classifys - knowledge label extraction.
     * @param string $AppTypeDesc Application type description.
     * @param BaseConfig $BaseConfig Application type description.
     * @param AppConfig $AppConfig Application configuration.
     * @param boolean $AvatarInAppeal Whether the avatar is under appeal.
     * @param boolean $RoleInAppeal Whether the role description is under appeal.
     * @param boolean $NameInAppeal Whether the name is under appeal.
     * @param boolean $GreetingInAppeal Whether the welcome words are under appeal.
     * @param boolean $BareAnswerInAppeal Whether the response message for unknown questions is under appeal.
     * @param string $AppKey App key of the application.
     * @param integer $AppStatus Application status. 1: offline; 2: running; 3: disabled.
     * @param string $AppStatusDesc Status description.
     * @param string $RequestId The unique request ID, generated by the server, will be returned for every request (if the request fails to reach the server for other reasons, the request will not obtain a RequestId). RequestId is required for locating a problem.
     */
    function __construct()
    {

    }

    /**
     * For internal only. DO NOT USE IT.
     */
    public function deserialize($param)
    {
        if ($param === null) {
            return;
        }
        if (array_key_exists("AppBizId",$param) and $param["AppBizId"] !== null) {
            $this->AppBizId = $param["AppBizId"];
        }

        if (array_key_exists("AppType",$param) and $param["AppType"] !== null) {
            $this->AppType = $param["AppType"];
        }

        if (array_key_exists("AppTypeDesc",$param) and $param["AppTypeDesc"] !== null) {
            $this->AppTypeDesc = $param["AppTypeDesc"];
        }

        if (array_key_exists("BaseConfig",$param) and $param["BaseConfig"] !== null) {
            $this->BaseConfig = new BaseConfig();
            $this->BaseConfig->deserialize($param["BaseConfig"]);
        }

        if (array_key_exists("AppConfig",$param) and $param["AppConfig"] !== null) {
            $this->AppConfig = new AppConfig();
            $this->AppConfig->deserialize($param["AppConfig"]);
        }

        if (array_key_exists("AvatarInAppeal",$param) and $param["AvatarInAppeal"] !== null) {
            $this->AvatarInAppeal = $param["AvatarInAppeal"];
        }

        if (array_key_exists("RoleInAppeal",$param) and $param["RoleInAppeal"] !== null) {
            $this->RoleInAppeal = $param["RoleInAppeal"];
        }

        if (array_key_exists("NameInAppeal",$param) and $param["NameInAppeal"] !== null) {
            $this->NameInAppeal = $param["NameInAppeal"];
        }

        if (array_key_exists("GreetingInAppeal",$param) and $param["GreetingInAppeal"] !== null) {
            $this->GreetingInAppeal = $param["GreetingInAppeal"];
        }

        if (array_key_exists("BareAnswerInAppeal",$param) and $param["BareAnswerInAppeal"] !== null) {
            $this->BareAnswerInAppeal = $param["BareAnswerInAppeal"];
        }

        if (array_key_exists("AppKey",$param) and $param["AppKey"] !== null) {
            $this->AppKey = $param["AppKey"];
        }

        if (array_key_exists("AppStatus",$param) and $param["AppStatus"] !== null) {
            $this->AppStatus = $param["AppStatus"];
        }

        if (array_key_exists("AppStatusDesc",$param) and $param["AppStatusDesc"] !== null) {
            $this->AppStatusDesc = $param["AppStatusDesc"];
        }

        if (array_key_exists("RequestId",$param) and $param["RequestId"] !== null) {
            $this->RequestId = $param["RequestId"];
        }
    }
}
